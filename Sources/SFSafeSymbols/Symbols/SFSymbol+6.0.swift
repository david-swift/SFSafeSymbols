// Don't touch this manually, this code is generated by the SymbolsGenerator helper tool

// 6.0 Symbols
@available(iOS 18.0, macOS 15.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, *)
public extension SFSymbol {
    /// 􀎁
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _10ArrowTriangleheadClockwise = SymbolWith1Localization<Hi>(rawValue: "10.arrow.trianglehead.clockwise")

    /// 􀎂
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _10ArrowTriangleheadCounterclockwise = SymbolWith1Localization<Hi>(rawValue: "10.arrow.trianglehead.counterclockwise")

    /// 􀎃
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _15ArrowTriangleheadClockwise = SymbolWith1Localization<Hi>(rawValue: "15.arrow.trianglehead.clockwise")

    /// 􀎄
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _15ArrowTriangleheadCounterclockwise = SymbolWith1Localization<Hi>(rawValue: "15.arrow.trianglehead.counterclockwise")

    /// 􀎅
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _30ArrowTriangleheadClockwise = SymbolWith1Localization<Hi>(rawValue: "30.arrow.trianglehead.clockwise")

    /// 􀎆
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _30ArrowTriangleheadCounterclockwise = SymbolWith1Localization<Hi>(rawValue: "30.arrow.trianglehead.counterclockwise")

    /// 􀎇
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _45ArrowTriangleheadClockwise = SymbolWith1Localization<Hi>(rawValue: "45.arrow.trianglehead.clockwise")

    /// 􀎈
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _45ArrowTriangleheadCounterclockwise = SymbolWith1Localization<Hi>(rawValue: "45.arrow.trianglehead.counterclockwise")

    /// 􀶰
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _5ArrowTriangleheadClockwise = SymbolWith1Localization<Hi>(rawValue: "5.arrow.trianglehead.clockwise")

    /// 􀶱
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _5ArrowTriangleheadCounterclockwise = SymbolWith1Localization<Hi>(rawValue: "5.arrow.trianglehead.counterclockwise")

    /// 􀎉
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _60ArrowTriangleheadClockwise = SymbolWith1Localization<Hi>(rawValue: "60.arrow.trianglehead.clockwise")

    /// 􀎊
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _60ArrowTriangleheadCounterclockwise = SymbolWith1Localization<Hi>(rawValue: "60.arrow.trianglehead.counterclockwise")

    /// 􀘤
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _75ArrowTriangleheadClockwise = SymbolWith1Localization<Hi>(rawValue: "75.arrow.trianglehead.clockwise")

    /// 􀘥
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _75ArrowTriangleheadCounterclockwise = SymbolWith1Localization<Hi>(rawValue: "75.arrow.trianglehead.counterclockwise")

    /// 􀘦
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _90ArrowTriangleheadClockwise = SymbolWith1Localization<Hi>(rawValue: "90.arrow.trianglehead.clockwise")

    /// 􀘧
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _90ArrowTriangleheadCounterclockwise = SymbolWith1Localization<Hi>(rawValue: "90.arrow.trianglehead.counterclockwise")

    /// 􂥣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let airCarSide = SFSymbol(rawValue: "air.car.side")

    /// 􂥤
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let airCarSideFill = SFSymbol(rawValue: "air.car.side.fill")

    /// 􂥩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let airConvertibleSide = SFSymbol(rawValue: "air.convertible.side")

    /// 􂥪
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let airConvertibleSideFill = SFSymbol(rawValue: "air.convertible.side.fill")

    /// 􂥧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let airPickupSide = SFSymbol(rawValue: "air.pickup.side")

    /// 􂥨
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let airPickupSideFill = SFSymbol(rawValue: "air.pickup.side.fill")

    /// 􂥥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let airSuvSide = SFSymbol(rawValue: "air.suv.side")

    /// 􂥦
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let airSuvSideFill = SFSymbol(rawValue: "air.suv.side.fill")

    /// 􀑢
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPlay.
    static let airplayAudio = SFSymbol(rawValue: "airplay.audio")

    /// 􀱫
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPlay.
    static let airplayAudioBadgeExclamationmark = SFSymbol(rawValue: "airplay.audio.badge.exclamationmark")

    /// 􀾧
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPlay.
    static let airplayAudioCircle = SFSymbol(rawValue: "airplay.audio.circle")

    /// 􀾨
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPlay.
    static let airplayAudioCircleFill = SFSymbol(rawValue: "airplay.audio.circle.fill")

    /// 􀑡
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPlay.
    static let airplayVideo = SFSymbol(rawValue: "airplay.video")

    /// 􀱪
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPlay.
    static let airplayVideoBadgeExclamationmark = SFSymbol(rawValue: "airplay.video.badge.exclamationmark")

    /// 􀾑
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPlay.
    static let airplayVideoCircle = SFSymbol(rawValue: "airplay.video.circle")

    /// 􀾒
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPlay.
    static let airplayVideoCircleFill = SFSymbol(rawValue: "airplay.video.circle.fill")

    /// 􀺹
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPods Max.
    static let airpodsMax = SFSymbol(rawValue: "airpods.max")

    /// 􀪷
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPods Pro.
    static let airpodsPro = SFSymbol(rawValue: "airpods.pro")

    /// 􀹫
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPods Pro.
    static let airpodsProChargingcaseWireless = SFSymbol(rawValue: "airpods.pro.chargingcase.wireless")

    /// 􀹬
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPods Pro.
    static let airpodsProChargingcaseWirelessFill = SFSymbol(rawValue: "airpods.pro.chargingcase.wireless.fill")

    /// 􁔂
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPods Pro.
    static let airpodsProChargingcaseWirelessRadiowavesLeftAndRight = SFSymbol(rawValue: "airpods.pro.chargingcase.wireless.radiowaves.left.and.right")

    /// 􁔃
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPods Pro.
    static let airpodsProChargingcaseWirelessRadiowavesLeftAndRightFill = SFSymbol(rawValue: "airpods.pro.chargingcase.wireless.radiowaves.left.and.right.fill")

    /// 􀲎
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPods Pro.
    static let airpodsProLeft = SFSymbol(rawValue: "airpods.pro.left")

    /// 􀲍
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s AirPods Pro.
    static let airpodsProRight = SFSymbol(rawValue: "airpods.pro.right")

    /// 􁗋
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let americanFootball = SFSymbol(rawValue: "american.football")

    /// 􁚿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let americanFootballCircle = SFSymbol(rawValue: "american.football.circle")

    /// 􁛀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let americanFootballCircleFill = SFSymbol(rawValue: "american.football.circle.fill")

    /// 􁗌
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let americanFootballFill = SFSymbol(rawValue: "american.football.fill")

    /// 􂎵
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let americanFootballProfessional = SFSymbol(rawValue: "american.football.professional")

    /// 􂎷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let americanFootballProfessionalCircle = SFSymbol(rawValue: "american.football.professional.circle")

    /// 􂎸
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let americanFootballProfessionalCircleFill = SFSymbol(rawValue: "american.football.professional.circle.fill")

    /// 􂎶
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let americanFootballProfessionalFill = SFSymbol(rawValue: "american.football.professional.fill")

    /// 􂪻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let antennaRadiowavesLeftAndRightSlashCircle = SFSymbol(rawValue: "antenna.radiowaves.left.and.right.slash.circle")

    /// 􂪽
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let antennaRadiowavesLeftAndRightSlashCircleFill = SFSymbol(rawValue: "antenna.radiowaves.left.and.right.slash.circle.fill")

    /// 􂡆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let appBadgeClock = SFSymbol(rawValue: "app.badge.clock")

    /// 􂡇
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let appBadgeClockFill = SFSymbol(rawValue: "app.badge.clock.fill")

    /// 􀉇
    /// 2 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    static let appendPage = SymbolWith1Localization<Rtl>(rawValue: "append.page")

    /// 􀦋
    /// 2 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    static let appendPageFill = SymbolWith1Localization<Rtl>(rawValue: "append.page.fill")

    /// 􂫥
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to music based haptic feedback for software that is compatible with the Core Haptics API.
    static let appleHapticsAndExclamationmarkTriangle = SFSymbol(rawValue: "apple.haptics.and.exclamationmark.triangle")

    /// 􂝾
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to music based haptic feedback for software that is compatible with the Core Haptics API.
    static let appleHapticsAndMusicNote = SFSymbol(rawValue: "apple.haptics.and.music.note")

    /// 􂞀
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to music based haptic feedback for software that is compatible with the Core Haptics API.
    static let appleHapticsAndMusicNoteSlash = SFSymbol(rawValue: "apple.haptics.and.music.note.slash")

    /// 􂮕
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s Image Playground.
    static let appleImagePlayground = SFSymbol(rawValue: "apple.image.playground")

    /// 􂮖
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s Image Playground.
    static let appleImagePlaygroundFill = SFSymbol(rawValue: "apple.image.playground.fill")

    /// 􂮢
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Intelligence.
    static let appleIntelligence = SFSymbol(rawValue: "apple.intelligence")

    /// 􂛑
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s Meditation in Fitness+.
    static let appleMeditateCircle = SFSymbol(rawValue: "apple.meditate.circle")

    /// 􂛒
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s Meditation in Fitness+.
    static let appleMeditateCircleFill = SFSymbol(rawValue: "apple.meditate.circle.fill")

    /// 􂤀
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Pencil.
    static let applepencilDoubletap = SFSymbol(rawValue: "applepencil.doubletap")

    /// 􁤒
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Pencil.
    static let applepencilHover = SFSymbol(rawValue: "applepencil.hover")

    /// 􂣿
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Pencil.
    static let applepencilSqueeze = SFSymbol(rawValue: "applepencil.squeeze")

    /// 􂠼
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Watch.
    static let applewatchCaseSizes = SFSymbol(rawValue: "applewatch.case.sizes")

    /// 􂁣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arcadeStickAndArrowLeftAndArrowRightOutward = SFSymbol(rawValue: "arcade.stick.and.arrow.left.and.arrow.right.outward")

    /// 􂚧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowBackwardCircleDotted = SFSymbol(rawValue: "arrow.backward.circle.dotted")

    /// 􂂥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowDownBackwardAndArrowUpForwardRectangle = SFSymbol(rawValue: "arrow.down.backward.and.arrow.up.forward.rectangle")

    /// 􂂦
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowDownBackwardAndArrowUpForwardRectangleFill = SFSymbol(rawValue: "arrow.down.backward.and.arrow.up.forward.rectangle.fill")

    /// 􂚰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowDownBackwardCircleDotted = SFSymbol(rawValue: "arrow.down.backward.circle.dotted")

    /// 􀈽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowDownDocument = SFSymbol(rawValue: "arrow.down.document")

    /// 􀈾
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowDownDocumentFill = SFSymbol(rawValue: "arrow.down.document.fill")

    /// 􂬞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowDownForwardAndArrowUpBackwardRectangle = SFSymbol(rawValue: "arrow.down.forward.and.arrow.up.backward.rectangle")

    /// 􂬟
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowDownForwardAndArrowUpBackwardRectangleFill = SFSymbol(rawValue: "arrow.down.forward.and.arrow.up.backward.rectangle.fill")

    /// 􂛴
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowDownForwardCircleDotted = SFSymbol(rawValue: "arrow.down.forward.circle.dotted")

    /// 􂂣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowDownLeftAndArrowUpRightRectangle = SFSymbol(rawValue: "arrow.down.left.and.arrow.up.right.rectangle")

    /// 􂂤
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowDownLeftAndArrowUpRightRectangleFill = SFSymbol(rawValue: "arrow.down.left.and.arrow.up.right.rectangle.fill")

    /// 􂚯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowDownLeftCircleDotted = SFSymbol(rawValue: "arrow.down.left.circle.dotted")

    /// 􂬜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowDownRightAndArrowUpLeftRectangle = SFSymbol(rawValue: "arrow.down.right.and.arrow.up.left.rectangle")

    /// 􂬝
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowDownRightAndArrowUpLeftRectangleFill = SFSymbol(rawValue: "arrow.down.right.and.arrow.up.left.rectangle.fill")

    /// 􂛳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowDownRightCircleDotted = SFSymbol(rawValue: "arrow.down.right.circle.dotted")

    /// 􂚩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowForwardCircleDotted = SFSymbol(rawValue: "arrow.forward.circle.dotted")

    /// 􂚦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowLeftCircleDotted = SFSymbol(rawValue: "arrow.left.circle.dotted")

    /// 􂚨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowRightCircleDotted = SFSymbol(rawValue: "arrow.right.circle.dotted")

    /// 􂧿
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowRightFilledFilterArrowRight = SFSymbol(rawValue: "arrow.right.filled.filter.arrow.right")

    /// 􀫵
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowRightPageOnClipboard = SFSymbol(rawValue: "arrow.right.page.on.clipboard")

    /// 􂣼
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTrianglehead2Clockwise = SFSymbol(rawValue: "arrow.trianglehead.2.clockwise")

    /// 􀊯
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTrianglehead2ClockwiseRotate90 = SFSymbol(rawValue: "arrow.trianglehead.2.clockwise.rotate.90")

    /// 􀌢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowTrianglehead2ClockwiseRotate90Camera = SFSymbol(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.camera")

    /// 􀌣
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowTrianglehead2ClockwiseRotate90CameraFill = SFSymbol(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.camera.fill")

    /// 􀖊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowTrianglehead2ClockwiseRotate90Circle = SFSymbol(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.circle")

    /// 􀖋
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowTrianglehead2ClockwiseRotate90CircleFill = SFSymbol(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.circle.fill")

    /// 􂆍
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iCloud service.
    static let arrowTrianglehead2ClockwiseRotate90Icloud = SFSymbol(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.icloud")

    /// 􂆎
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iCloud service.
    static let arrowTrianglehead2ClockwiseRotate90IcloudFill = SFSymbol(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.icloud.fill")

    /// 􀫷
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowTrianglehead2ClockwiseRotate90PageOnClipboard = SFSymbol(rawValue: "arrow.trianglehead.2.clockwise.rotate.90.page.on.clipboard")

    /// 􂣽
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTrianglehead2Counterclockwise = SFSymbol(rawValue: "arrow.trianglehead.2.counterclockwise")

    /// 􂣾
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTrianglehead2CounterclockwiseRotate90 = SFSymbol(rawValue: "arrow.trianglehead.2.counterclockwise.rotate.90")

    /// 􀤗
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadBottomleftCapsulepathClockwise = SFSymbol(rawValue: "arrow.trianglehead.bottomleft.capsulepath.clockwise")

    /// 􀙠
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadBranch = SFSymbol(rawValue: "arrow.trianglehead.branch")

    /// 􀍿
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadClockwise = SFSymbol(rawValue: "arrow.trianglehead.clockwise")

    /// 􀧡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowTriangleheadClockwiseHeart = SFSymbol(rawValue: "arrow.trianglehead.clockwise.heart")

    /// 􀧢
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowTriangleheadClockwiseHeartFill = SFSymbol(rawValue: "arrow.trianglehead.clockwise.heart.fill")

    /// 􀙷
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iCloud service.
    static let arrowTriangleheadClockwiseIcloud = SFSymbol(rawValue: "arrow.trianglehead.clockwise.icloud")

    /// 􀙸
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iCloud service.
    static let arrowTriangleheadClockwiseIcloudFill = SFSymbol(rawValue: "arrow.trianglehead.clockwise.icloud.fill")

    /// 􂝔
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadClockwiseRotate90 = SFSymbol(rawValue: "arrow.trianglehead.clockwise.rotate.90")

    /// 􀎀
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadCounterclockwise = SFSymbol(rawValue: "arrow.trianglehead.counterclockwise")

    /// 􀙹
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iCloud service.
    static let arrowTriangleheadCounterclockwiseIcloud = SFSymbol(rawValue: "arrow.trianglehead.counterclockwise.icloud")

    /// 􀙺
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iCloud service.
    static let arrowTriangleheadCounterclockwiseIcloudFill = SFSymbol(rawValue: "arrow.trianglehead.counterclockwise.icloud.fill")

    /// 􁹠
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "arrow.trianglehead.counterclockwise.rotate.90")

    /// 􀞒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowTriangleheadLeftAndRightRighttriangleLeftRighttriangleRight = SFSymbol(rawValue: "arrow.trianglehead.left.and.right.righttriangle.left.righttriangle.right")

    /// 􀞓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowTriangleheadLeftAndRightRighttriangleLeftRighttriangleRightFill = SFSymbol(rawValue: "arrow.trianglehead.left.and.right.righttriangle.left.righttriangle.right.fill")

    /// 􀖄
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadMerge = SFSymbol(rawValue: "arrow.trianglehead.merge")

    /// 􀙡
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadPull = SFSymbol(rawValue: "arrow.trianglehead.pull")

    /// 􀣁
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadRectanglepath = SFSymbol(rawValue: "arrow.trianglehead.rectanglepath")

    /// 􀖅
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadSwap = SFSymbol(rawValue: "arrow.trianglehead.swap")

    /// 􀤖
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let arrowTriangleheadToprightCapsulepathClockwise = SFSymbol(rawValue: "arrow.trianglehead.topright.capsulepath.clockwise")

    /// 􀟷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowTriangleheadTurnUpRightCircle = SFSymbol(rawValue: "arrow.trianglehead.turn.up.right.circle")

    /// 􀟸
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor
    /// - Hierarchical
    static let arrowTriangleheadTurnUpRightCircleFill = SFSymbol(rawValue: "arrow.trianglehead.turn.up.right.circle.fill")

    /// 􀙞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowTriangleheadTurnUpRightDiamond = SFSymbol(rawValue: "arrow.trianglehead.turn.up.right.diamond")

    /// 􀙟
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowTriangleheadTurnUpRightDiamondFill = SFSymbol(rawValue: "arrow.trianglehead.turn.up.right.diamond.fill")

    /// 􀟨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowTriangleheadUpAndDownRighttriangleUpRighttriangleDown = SFSymbol(rawValue: "arrow.trianglehead.up.and.down.righttriangle.up.righttriangle.down")

    /// 􀟩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowTriangleheadUpAndDownRighttriangleUpRighttriangleDownFill = SFSymbol(rawValue: "arrow.trianglehead.up.and.down.righttriangle.up.righttriangle.down.fill")

    /// 􂂡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowUpBackwardAndArrowDownForwardRectangle = SFSymbol(rawValue: "arrow.up.backward.and.arrow.down.forward.rectangle")

    /// 􂂢
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowUpBackwardAndArrowDownForwardRectangleFill = SFSymbol(rawValue: "arrow.up.backward.and.arrow.down.forward.rectangle.fill")

    /// 􂚬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowUpBackwardCircleDotted = SFSymbol(rawValue: "arrow.up.backward.circle.dotted")

    /// 􂚪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowUpCircleDotted = SFSymbol(rawValue: "arrow.up.circle.dotted")

    /// 􀈻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowUpDocument = SFSymbol(rawValue: "arrow.up.document")

    /// 􀈼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowUpDocumentFill = SFSymbol(rawValue: "arrow.up.document.fill")

    /// 􂬢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowUpForwardAndArrowDownBackwardRectangle = SFSymbol(rawValue: "arrow.up.forward.and.arrow.down.backward.rectangle")

    /// 􂬣
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowUpForwardAndArrowDownBackwardRectangleFill = SFSymbol(rawValue: "arrow.up.forward.and.arrow.down.backward.rectangle.fill")

    /// 􂚮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowUpForwardCircleDotted = SFSymbol(rawValue: "arrow.up.forward.circle.dotted")

    /// 􂂟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowUpLeftAndArrowDownRightRectangle = SFSymbol(rawValue: "arrow.up.left.and.arrow.down.right.rectangle")

    /// 􂂠
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowUpLeftAndArrowDownRightRectangleFill = SFSymbol(rawValue: "arrow.up.left.and.arrow.down.right.rectangle.fill")

    /// 􂚫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowUpLeftCircleDotted = SFSymbol(rawValue: "arrow.up.left.circle.dotted")

    /// 􀫶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let arrowUpPageOnClipboard = SFSymbol(rawValue: "arrow.up.page.on.clipboard")

    /// 􂚭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let arrowUpRightCircleDotted = SFSymbol(rawValue: "arrow.up.right.circle.dotted")

    /// 􂒲
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let australianFootball = SFSymbol(rawValue: "australian.football")

    /// 􂒴
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australianFootballCircle = SFSymbol(rawValue: "australian.football.circle")

    /// 􂒵
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let australianFootballCircleFill = SFSymbol(rawValue: "australian.football.circle.fill")

    /// 􂒳
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let australianFootballFill = SFSymbol(rawValue: "australian.football.fill")

    /// 􂈹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australiandollarsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "australiandollarsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂕉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australiandollarsignBankBuilding = SFSymbol(rawValue: "australiandollarsign.bank.building")

    /// 􂕊
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let australiandollarsignBankBuildingFill = SFSymbol(rawValue: "australiandollarsign.bank.building.fill")

    /// 􂨼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australiandollarsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "australiandollarsign.gauge.chart.lefthalf.righthalf")

    /// 􂩦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australiandollarsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "australiandollarsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australiandollarsignRing = SFSymbol(rawValue: "australiandollarsign.ring")

    /// 􂯢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australiandollarsignRingDashed = SFSymbol(rawValue: "australiandollarsign.ring.dashed")

    /// 􂈣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "australsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australsignBankBuilding = SFSymbol(rawValue: "australsign.bank.building")

    /// 􂔞
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let australsignBankBuildingFill = SFSymbol(rawValue: "australsign.bank.building.fill")

    /// 􂨻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "australsign.gauge.chart.lefthalf.righthalf")

    /// 􂩥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "australsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australsignRing = SFSymbol(rawValue: "australsign.ring")

    /// 􂯡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let australsignRingDashed = SFSymbol(rawValue: "australsign.ring.dashed")

    /// 􂈯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bahtsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "bahtsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bahtsignBankBuilding = SFSymbol(rawValue: "bahtsign.bank.building")

    /// 􂔶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let bahtsignBankBuildingFill = SFSymbol(rawValue: "bahtsign.bank.building.fill")

    /// 􂨽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bahtsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "bahtsign.gauge.chart.lefthalf.righthalf")

    /// 􂩧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bahtsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "bahtsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bahtsignRing = SFSymbol(rawValue: "bahtsign.ring")

    /// 􂯣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bahtsignRingDashed = SFSymbol(rawValue: "bahtsign.ring.dashed")

    /// 􂭎
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let baseUnit = SFSymbol(rawValue: "base.unit")

    /// 􂜥
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let baseballDiamondBasesOutsIndicator = SFSymbol(rawValue: "baseball.diamond.bases.outs.indicator")

    /// 􂙗
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let batteryblockStack = SFSymbol(rawValue: "batteryblock.stack")

    /// 􂘙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let batteryblockStackBadgeSnowflake = SFSymbol(rawValue: "batteryblock.stack.badge.snowflake")

    /// 􂛯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let batteryblockStackBadgeSnowflakeFill = SFSymbol(rawValue: "batteryblock.stack.badge.snowflake.fill")

    /// 􂙘
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let batteryblockStackFill = SFSymbol(rawValue: "batteryblock.stack.fill")

    /// 􂘚
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let batteryblockStackTrianglebadgeExclamationmark = SFSymbol(rawValue: "batteryblock.stack.trianglebadge.exclamationmark")

    /// 􂛱
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let batteryblockStackTrianglebadgeExclamationmarkFill = SFSymbol(rawValue: "batteryblock.stack.trianglebadge.exclamationmark.fill")

    /// 􀹭
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Powerbeats Pro.
    static let beatsPowerbeatsPro = SFSymbol(rawValue: "beats.powerbeats.pro")

    /// 􀹰
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Powerbeats Pro case.
    static let beatsPowerbeatsProChargingcase = SFSymbol(rawValue: "beats.powerbeats.pro.chargingcase")

    /// 􀹱
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Powerbeats Pro case.
    static let beatsPowerbeatsProChargingcaseFill = SFSymbol(rawValue: "beats.powerbeats.pro.chargingcase.fill")

    /// 􀹯
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Powerbeats Pro.
    static let beatsPowerbeatsProLeft = SFSymbol(rawValue: "beats.powerbeats.pro.left")

    /// 􀹮
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Powerbeats Pro.
    static let beatsPowerbeatsProRight = SFSymbol(rawValue: "beats.powerbeats.pro.right")

    /// 􀾣
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Studio Buds.
    static let beatsStudiobudsLeft = SFSymbol(rawValue: "beats.studiobuds.left")

    /// 􁹳
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Studio Buds Plus.
    static let beatsStudiobudsPlus = SFSymbol(rawValue: "beats.studiobuds.plus")

    /// 􁹶
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Studio Buds Plus case.
    static let beatsStudiobudsPlusChargingcase = SFSymbol(rawValue: "beats.studiobuds.plus.chargingcase")

    /// 􁹷
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Studio Buds Plus case.
    static let beatsStudiobudsPlusChargingcaseFill = SFSymbol(rawValue: "beats.studiobuds.plus.chargingcase.fill")

    /// 􁹴
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Studio Buds Plus.
    static let beatsStudiobudsPlusLeft = SFSymbol(rawValue: "beats.studiobuds.plus.left")

    /// 􁹵
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Studio Buds Plus.
    static let beatsStudiobudsPlusRight = SFSymbol(rawValue: "beats.studiobuds.plus.right")

    /// 􀾤
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Beats Studio Buds.
    static let beatsStudiobudsRight = SFSymbol(rawValue: "beats.studiobuds.right")

    /// 􀜢
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let beziercurve = SFSymbol(rawValue: "beziercurve")

    /// 􂈱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bitcoinsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "bitcoinsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bitcoinsignBankBuilding = SFSymbol(rawValue: "bitcoinsign.bank.building")

    /// 􂔺
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let bitcoinsignBankBuildingFill = SFSymbol(rawValue: "bitcoinsign.bank.building.fill")

    /// 􂨾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bitcoinsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "bitcoinsign.gauge.chart.lefthalf.righthalf")

    /// 􂩨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bitcoinsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "bitcoinsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bitcoinsignRing = SFSymbol(rawValue: "bitcoinsign.ring")

    /// 􂯤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bitcoinsignRingDashed = SFSymbol(rawValue: "bitcoinsign.ring.dashed")

    /// 􂈲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let brazilianrealsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "brazilianrealsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let brazilianrealsignBankBuilding = SFSymbol(rawValue: "brazilianrealsign.bank.building")

    /// 􂔼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let brazilianrealsignBankBuildingFill = SFSymbol(rawValue: "brazilianrealsign.bank.building.fill")

    /// 􂨿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let brazilianrealsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "brazilianrealsign.gauge.chart.lefthalf.righthalf")

    /// 􂩩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let brazilianrealsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "brazilianrealsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let brazilianrealsignRing = SFSymbol(rawValue: "brazilianrealsign.ring")

    /// 􂯥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let brazilianrealsignRingDashed = SFSymbol(rawValue: "brazilianrealsign.ring.dashed")

    /// 􂛥
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let bubbleAndPencil = SymbolWith1Localization<Rtl>(rawValue: "bubble.and.pencil")

    /// 􂕝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let calendarAndPerson = SFSymbol(rawValue: "calendar.and.person")

    /// 􂏝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cameraMacroSlash = SFSymbol(rawValue: "camera.macro.slash")

    /// 􂏞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cameraMacroSlashCircle = SFSymbol(rawValue: "camera.macro.slash.circle")

    /// 􂏟
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let cameraMacroSlashCircleFill = SFSymbol(rawValue: "camera.macro.slash.circle.fill")

    /// 􂘯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let capsuleOnCapsule = SFSymbol(rawValue: "capsule.on.capsule")

    /// 􂘰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let capsuleOnCapsuleFill = SFSymbol(rawValue: "capsule.on.capsule.fill")

    /// 􂘱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let capsuleOnRectangle = SFSymbol(rawValue: "capsule.on.rectangle")

    /// 􂘲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let capsuleOnRectangleFill = SFSymbol(rawValue: "capsule.on.rectangle.fill")

    /// 􂤭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carBadgeGearshape = SFSymbol(rawValue: "car.badge.gearshape")

    /// 􂤮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carBadgeGearshapeFill = SFSymbol(rawValue: "car.badge.gearshape.fill")

    /// 􂤻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carFrontWavesLeftAndRightAndUp = SFSymbol(rawValue: "car.front.waves.left.and.right.and.up")

    /// 􂤼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carFrontWavesLeftAndRightAndUpFill = SFSymbol(rawValue: "car.front.waves.left.and.right.and.up.fill")

    /// 􂊹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearAndTireMarksOff = SFSymbol(rawValue: "car.rear.and.tire.marks.off")

    /// 􂉓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearHazardsign = SFSymbol(rawValue: "car.rear.hazardsign")

    /// 􂉔
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carRearHazardsignFill = SFSymbol(rawValue: "car.rear.hazardsign.fill")

    /// 􂊺
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance1 = SFSymbol(rawValue: "car.rear.road.lane.distance.1")

    /// 􂊿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance1AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = SFSymbol(rawValue: "car.rear.road.lane.distance.1.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")

    /// 􂊻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance2 = SFSymbol(rawValue: "car.rear.road.lane.distance.2")

    /// 􂋀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance2AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = SFSymbol(rawValue: "car.rear.road.lane.distance.2.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")

    /// 􂊼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance3 = SFSymbol(rawValue: "car.rear.road.lane.distance.3")

    /// 􂋁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance3AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = SFSymbol(rawValue: "car.rear.road.lane.distance.3.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")

    /// 􂊽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance4 = SFSymbol(rawValue: "car.rear.road.lane.distance.4")

    /// 􂋂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance4AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = SFSymbol(rawValue: "car.rear.road.lane.distance.4.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")

    /// 􂊾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance5 = SFSymbol(rawValue: "car.rear.road.lane.distance.5")

    /// 􂋃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDistance5AndGaugeOpenWithLinesNeedle67percentAndArrowtriangle = SFSymbol(rawValue: "car.rear.road.lane.distance.5.and.gauge.open.with.lines.needle.67percent.and.arrowtriangle")

    /// 􂋌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneOff = SFSymbol(rawValue: "car.rear.road.lane.off")

    /// 􂤽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneWaveUp = SFSymbol(rawValue: "car.rear.road.lane.wave.up")

    /// 􂬱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearTiltRoadLanesCurvedRight = SFSymbol(rawValue: "car.rear.tilt.road.lanes.curved.right")

    /// 􂞒
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carSideFrontOpenCrop = SFSymbol(rawValue: "car.side.front.open.crop")

    /// 􂞓
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carSideFrontOpenCropFill = SFSymbol(rawValue: "car.side.front.open.crop.fill")

    /// 􂊦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideHillDescentControl = SFSymbol(rawValue: "car.side.hill.descent.control")

    /// 􂊧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideHillDescentControlFill = SFSymbol(rawValue: "car.side.hill.descent.control.fill")

    /// 􂐁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideRearAndExclamationmarkAndCarSideFrontOff = SFSymbol(rawValue: "car.side.rear.and.exclamationmark.and.car.side.front.off")

    /// 􂬬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideRearCropTrunkPartition = SFSymbol(rawValue: "car.side.rear.crop.trunk.partition")

    /// 􂬭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideRearCropTrunkPartitionFill = SFSymbol(rawValue: "car.side.rear.crop.trunk.partition.fill")

    /// 􂞔
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carSideRearOpenCrop = SFSymbol(rawValue: "car.side.rear.open.crop")

    /// 􂞕
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carSideRearOpenCropFill = SFSymbol(rawValue: "car.side.rear.open.crop.fill")

    /// 􂤗
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carSideRearTowHitch = SFSymbol(rawValue: "car.side.rear.tow.hitch")

    /// 􂤘
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carSideRearTowHitchFill = SFSymbol(rawValue: "car.side.rear.tow.hitch.fill")

    /// 􂊟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideRoofCargoCarrier = SFSymbol(rawValue: "car.side.roof.cargo.carrier")

    /// 􂊠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideRoofCargoCarrierFill = SFSymbol(rawValue: "car.side.roof.cargo.carrier.fill")

    /// 􂙁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideRoofCargoCarrierSlash = SFSymbol(rawValue: "car.side.roof.cargo.carrier.slash")

    /// 􂙃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideRoofCargoCarrierSlashFill = SFSymbol(rawValue: "car.side.roof.cargo.carrier.slash.fill")

    /// 􂂛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopArrowtriangleFrontLeft = SFSymbol(rawValue: "car.top.arrowtriangle.front.left")

    /// 􂂜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopArrowtriangleFrontLeftFill = SFSymbol(rawValue: "car.top.arrowtriangle.front.left.fill")

    /// 􂂝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopArrowtriangleFrontRight = SFSymbol(rawValue: "car.top.arrowtriangle.front.right")

    /// 􂂞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopArrowtriangleFrontRightFill = SFSymbol(rawValue: "car.top.arrowtriangle.front.right.fill")

    /// 􂂑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopArrowtriangleRearLeft = SFSymbol(rawValue: "car.top.arrowtriangle.rear.left")

    /// 􂂒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopArrowtriangleRearLeftFill = SFSymbol(rawValue: "car.top.arrowtriangle.rear.left.fill")

    /// 􂂓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopArrowtriangleRearRight = SFSymbol(rawValue: "car.top.arrowtriangle.rear.right")

    /// 􂂔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopArrowtriangleRearRightFill = SFSymbol(rawValue: "car.top.arrowtriangle.rear.right.fill")

    /// 􂨒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopFrontRadiowavesFrontLeftAndFrontAndFrontRight = SFSymbol(rawValue: "car.top.front.radiowaves.front.left.and.front.and.front.right")

    /// 􂨓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopFrontRadiowavesFrontLeftAndFrontAndFrontRightFill = SFSymbol(rawValue: "car.top.front.radiowaves.front.left.and.front.and.front.right.fill")

    /// 􂤾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopRadiowavesRearLeftCarTopFront = SFSymbol(rawValue: "car.top.radiowaves.rear.left.car.top.front")

    /// 􂤿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopRadiowavesRearLeftCarTopFrontFill = SFSymbol(rawValue: "car.top.radiowaves.rear.left.car.top.front.fill")

    /// 􂥀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopRadiowavesRearRightCarTopFront = SFSymbol(rawValue: "car.top.radiowaves.rear.right.car.top.front")

    /// 􂥁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopRadiowavesRearRightCarTopFrontFill = SFSymbol(rawValue: "car.top.radiowaves.rear.right.car.top.front.fill")

    /// 􂨔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopRearRadiowavesRearLeftAndRearAndRearRight = SFSymbol(rawValue: "car.top.rear.radiowaves.rear.left.and.rear.and.rear.right")

    /// 􂨕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopRearRadiowavesRearLeftAndRearAndRearRightFill = SFSymbol(rawValue: "car.top.rear.radiowaves.rear.left.and.rear.and.rear.right.fill")

    /// 􂨎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopVideoRearLeft = SFSymbol(rawValue: "car.top.video.rear.left")

    /// 􂨏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopVideoRearLeftFill = SFSymbol(rawValue: "car.top.video.rear.left.fill")

    /// 􂨐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopVideoRearRight = SFSymbol(rawValue: "car.top.video.rear.right")

    /// 􂨑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopVideoRearRightFill = SFSymbol(rawValue: "car.top.video.rear.right.fill")

    /// 􂱰
    /// 2 Localizations, 3 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let cartBadgeClock = SymbolWith1Localization<Rtl>(rawValue: "cart.badge.clock")

    /// 􂱲
    /// 2 Localizations, 3 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let cartBadgeClockFill = SymbolWith1Localization<Rtl>(rawValue: "cart.badge.clock.fill")

    /// 􂈨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cedisignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "cedisign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cedisignBankBuilding = SFSymbol(rawValue: "cedisign.bank.building")

    /// 􂔨
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let cedisignBankBuildingFill = SFSymbol(rawValue: "cedisign.bank.building.fill")

    /// 􂩀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cedisignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "cedisign.gauge.chart.lefthalf.righthalf")

    /// 􂩪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cedisignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "cedisign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cedisignRing = SFSymbol(rawValue: "cedisign.ring")

    /// 􂯦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cedisignRingDashed = SFSymbol(rawValue: "cedisign.ring.dashed")

    /// 􂈓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let centsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "centsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂓽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let centsignBankBuilding = SFSymbol(rawValue: "centsign.bank.building")

    /// 􂓾
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let centsignBankBuildingFill = SFSymbol(rawValue: "centsign.bank.building.fill")

    /// 􂩁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let centsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "centsign.gauge.chart.lefthalf.righthalf")

    /// 􂩫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let centsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "centsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let centsignRing = SFSymbol(rawValue: "centsign.ring")

    /// 􂯧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let centsignRingDashed = SFSymbol(rawValue: "centsign.ring.dashed")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterBn = SFSymbol(rawValue: "character.bn")

    /// 􂏽
    /// 8 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let characterCircle = SymbolWith7Localizations<Ar, He, Hi, Ja, Ko, Th, Zh>(rawValue: "character.circle")

    /// 􂏾
    /// 8 Localizations, 3 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let characterCircleFill = SymbolWith7Localizations<Ar, He, Hi, Ja, Ko, Th, Zh>(rawValue: "character.circle.fill")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterGu = SFSymbol(rawValue: "character.gu")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterKn = SFSymbol(rawValue: "character.kn")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterMl = SFSymbol(rawValue: "character.ml")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterMni = SFSymbol(rawValue: "character.mni")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterMr = SFSymbol(rawValue: "character.mr")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterOr = SFSymbol(rawValue: "character.or")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterPa = SFSymbol(rawValue: "character.pa")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterSat = SFSymbol(rawValue: "character.sat")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterSi = SFSymbol(rawValue: "character.si")

    /// 􂏿
    /// 8 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let characterSquare = SymbolWith7Localizations<Ar, He, Hi, Ja, Ko, Th, Zh>(rawValue: "character.square")

    /// 􂐀
    /// 8 Localizations, 3 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let characterSquareFill = SymbolWith7Localizations<Ar, He, Hi, Ja, Ko, Th, Zh>(rawValue: "character.square.fill")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterTa = SFSymbol(rawValue: "character.ta")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let characterTe = SFSymbol(rawValue: "character.te")

    /// 􂐦
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let charactersLowercase = SFSymbol(rawValue: "characters.lowercase")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let charactersLowercaseEl = SFSymbol(rawValue: "characters.lowercase.el")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let charactersLowercaseRu = SFSymbol(rawValue: "characters.lowercase.ru")

    /// 􀥊
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let charactersUppercase = SFSymbol(rawValue: "characters.uppercase")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let charactersUppercaseEl = SFSymbol(rawValue: "characters.uppercase.el")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let charactersUppercaseRu = SFSymbol(rawValue: "characters.uppercase.ru")

    /// 􀥜
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let chartBarHorizontalPage = SFSymbol(rawValue: "chart.bar.horizontal.page")

    /// 􀦌
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let chartBarHorizontalPageFill = SFSymbol(rawValue: "chart.bar.horizontal.page.fill")

    /// 􂯞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chartBarYaxis = SFSymbol(rawValue: "chart.bar.yaxis")

    /// 􂮺
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chartLineTextClipboard = SFSymbol(rawValue: "chart.line.text.clipboard")

    /// 􂮻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chartLineTextClipboardFill = SFSymbol(rawValue: "chart.line.text.clipboard.fill")

    /// 􁣛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let checkmarkArrowTriangleheadCounterclockwise = SFSymbol(rawValue: "checkmark.arrow.trianglehead.counterclockwise")

    /// 􂱅
    /// 2 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    static let checkmarkSealTextPage = SymbolWith1Localization<Rtl>(rawValue: "checkmark.seal.text.page")

    /// 􂱆
    /// 2 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    static let checkmarkSealTextPageFill = SymbolWith1Localization<Rtl>(rawValue: "checkmark.seal.text.page.fill")

    /// 􂨫
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronBackwardChevronBackwardDotted = SFSymbol(rawValue: "chevron.backward.chevron.backward.dotted")

    /// 􂦬
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronCompactLeftChevronCompactRight = SFSymbol(rawValue: "chevron.compact.left.chevron.compact.right")

    /// 􂦫
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronCompactUpChevronCompactDown = SFSymbol(rawValue: "chevron.compact.up.chevron.compact.down")

    /// 􂦭
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronCompactUpChevronCompactRightChevronCompactDownChevronCompactLeft = SFSymbol(rawValue: "chevron.compact.up.chevron.compact.right.chevron.compact.down.chevron.compact.left")

    /// 􂪔
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronDown2 = SFSymbol(rawValue: "chevron.down.2")

    /// 􂨨
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronDownDotted2 = SFSymbol(rawValue: "chevron.down.dotted.2")

    /// 􂪘
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronDownForward2 = SFSymbol(rawValue: "chevron.down.forward.2")

    /// 􂪒
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronDownForwardDotted2 = SFSymbol(rawValue: "chevron.down.forward.dotted.2")

    /// 􂪗
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronDownRight2 = SFSymbol(rawValue: "chevron.down.right.2")

    /// 􂪑
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronDownRightDotted2 = SFSymbol(rawValue: "chevron.down.right.dotted.2")

    /// 􂨬
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronForwardDottedChevronForward = SFSymbol(rawValue: "chevron.forward.dotted.chevron.forward")

    /// 􂨩
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronLeftChevronLeftDotted = SFSymbol(rawValue: "chevron.left.chevron.left.dotted")

    /// 􂦩
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronLeftChevronRight = SFSymbol(rawValue: "chevron.left.chevron.right")

    /// 􂨪
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronRightDottedChevronRight = SFSymbol(rawValue: "chevron.right.dotted.chevron.right")

    /// 􂪓
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronUp2 = SFSymbol(rawValue: "chevron.up.2")

    /// 􂝒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chevronUpChevronDownSquare = SFSymbol(rawValue: "chevron.up.chevron.down.square")

    /// 􂝓
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let chevronUpChevronDownSquareFill = SFSymbol(rawValue: "chevron.up.chevron.down.square.fill")

    /// 􂦪
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronUpChevronRightChevronDownChevronLeft = SFSymbol(rawValue: "chevron.up.chevron.right.chevron.down.chevron.left")

    /// 􂨧
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronUpDotted2 = SFSymbol(rawValue: "chevron.up.dotted.2")

    /// 􂪖
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronUpForward2 = SFSymbol(rawValue: "chevron.up.forward.2")

    /// 􂪐
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronUpForwardDotted2 = SFSymbol(rawValue: "chevron.up.forward.dotted.2")

    /// 􂪕
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronUpRight2 = SFSymbol(rawValue: "chevron.up.right.2")

    /// 􂪏
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let chevronUpRightDotted2 = SFSymbol(rawValue: "chevron.up.right.dotted.2")

    /// 􂈳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chineseyuanrenminbisignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "chineseyuanrenminbisign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chineseyuanrenminbisignBankBuilding = SFSymbol(rawValue: "chineseyuanrenminbisign.bank.building")

    /// 􂔾
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let chineseyuanrenminbisignBankBuildingFill = SFSymbol(rawValue: "chineseyuanrenminbisign.bank.building.fill")

    /// 􂩂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chineseyuanrenminbisignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "chineseyuanrenminbisign.gauge.chart.lefthalf.righthalf")

    /// 􂩬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chineseyuanrenminbisignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "chineseyuanrenminbisign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chineseyuanrenminbisignRing = SFSymbol(rawValue: "chineseyuanrenminbisign.ring")

    /// 􂯨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let chineseyuanrenminbisignRingDashed = SFSymbol(rawValue: "chineseyuanrenminbisign.ring.dashed")

    /// 􁹨
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let circleBottomrighthalfPatternCheckered = SFSymbol(rawValue: "circle.bottomrighthalf.pattern.checkered")

    /// 􀯛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let clockArrowTrianglehead2CounterclockwiseRotate90 = SFSymbol(rawValue: "clock.arrow.trianglehead.2.counterclockwise.rotate.90")

    /// 􀣔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let clockArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "clock.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􁷞
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let cloudRainbowCrop = SFSymbol(rawValue: "cloud.rainbow.crop")

    /// 􁷠
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let cloudRainbowCropFill = SFSymbol(rawValue: "cloud.rainbow.crop.fill")

    /// 􂏣
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let coat = SFSymbol(rawValue: "coat")

    /// 􂏤
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let coatFill = SFSymbol(rawValue: "coat.fill")

    /// 􂈧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let coloncurrencysignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "coloncurrencysign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let coloncurrencysignBankBuilding = SFSymbol(rawValue: "coloncurrencysign.bank.building")

    /// 􂔦
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let coloncurrencysignBankBuildingFill = SFSymbol(rawValue: "coloncurrencysign.bank.building.fill")

    /// 􂩃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let coloncurrencysignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "coloncurrencysign.gauge.chart.lefthalf.righthalf")

    /// 􂩭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let coloncurrencysignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "coloncurrencysign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let coloncurrencysignRing = SFSymbol(rawValue: "coloncurrencysign.ring")

    /// 􂯩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let coloncurrencysignRingDashed = SFSymbol(rawValue: "coloncurrencysign.ring.dashed")

    /// 􂥂
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let convertibleSide = SFSymbol(rawValue: "convertible.side")

    /// 􂥙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideAirCirculate = SFSymbol(rawValue: "convertible.side.air.circulate")

    /// 􂥚
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let convertibleSideAirCirculateFill = SFSymbol(rawValue: "convertible.side.air.circulate.fill")

    /// 􂥛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideAirFresh = SFSymbol(rawValue: "convertible.side.air.fresh")

    /// 􂥜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideAirFreshFill = SFSymbol(rawValue: "convertible.side.air.fresh.fill")

    /// 􂥈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideAndExclamationmark = SFSymbol(rawValue: "convertible.side.and.exclamationmark")

    /// 􂥉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideAndExclamationmarkFill = SFSymbol(rawValue: "convertible.side.and.exclamationmark.fill")

    /// 􂬨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowTriangleheadBackward = SFSymbol(rawValue: "convertible.side.arrow.trianglehead.backward")

    /// 􂬩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowTriangleheadBackwardFill = SFSymbol(rawValue: "convertible.side.arrow.trianglehead.backward.fill")

    /// 􂬦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowTriangleheadForward = SFSymbol(rawValue: "convertible.side.arrow.trianglehead.forward")

    /// 􂬪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowTriangleheadForwardAndBackward = SFSymbol(rawValue: "convertible.side.arrow.trianglehead.forward.and.backward")

    /// 􂬫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowTriangleheadForwardAndBackwardFill = SFSymbol(rawValue: "convertible.side.arrow.trianglehead.forward.and.backward.fill")

    /// 􂬧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowTriangleheadForwardFill = SFSymbol(rawValue: "convertible.side.arrow.trianglehead.forward.fill")

    /// 􂥏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowtriangleDown = SFSymbol(rawValue: "convertible.side.arrowtriangle.down")

    /// 􂥐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowtriangleDownFill = SFSymbol(rawValue: "convertible.side.arrowtriangle.down.fill")

    /// 􂥍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowtriangleUp = SFSymbol(rawValue: "convertible.side.arrowtriangle.up")

    /// 􂥋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowtriangleUpArrowtriangleDown = SFSymbol(rawValue: "convertible.side.arrowtriangle.up.arrowtriangle.down")

    /// 􂥌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowtriangleUpArrowtriangleDownFill = SFSymbol(rawValue: "convertible.side.arrowtriangle.up.arrowtriangle.down.fill")

    /// 􂥎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideArrowtriangleUpFill = SFSymbol(rawValue: "convertible.side.arrowtriangle.up.fill")

    /// 􂥃
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let convertibleSideFill = SFSymbol(rawValue: "convertible.side.fill")

    /// 􂥄
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let convertibleSideFrontOpen = SFSymbol(rawValue: "convertible.side.front.open")

    /// 􂥆
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let convertibleSideFrontOpenCrop = SFSymbol(rawValue: "convertible.side.front.open.crop")

    /// 􂥇
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let convertibleSideFrontOpenCropFill = SFSymbol(rawValue: "convertible.side.front.open.crop.fill")

    /// 􂥅
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let convertibleSideFrontOpenFill = SFSymbol(rawValue: "convertible.side.front.open.fill")

    /// 􂦆
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideHillDescentControl = SFSymbol(rawValue: "convertible.side.hill.descent.control")

    /// 􂦇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideHillDescentControlFill = SFSymbol(rawValue: "convertible.side.hill.descent.control.fill")

    /// 􂦄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideHillDown = SFSymbol(rawValue: "convertible.side.hill.down")

    /// 􂦅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideHillDownFill = SFSymbol(rawValue: "convertible.side.hill.down.fill")

    /// 􂦂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideHillUp = SFSymbol(rawValue: "convertible.side.hill.up")

    /// 􂦃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideHillUpFill = SFSymbol(rawValue: "convertible.side.hill.up.fill")

    /// 􂥑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideLock = SFSymbol(rawValue: "convertible.side.lock")

    /// 􂥒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideLockFill = SFSymbol(rawValue: "convertible.side.lock.fill")

    /// 􂥕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideLockOpen = SFSymbol(rawValue: "convertible.side.lock.open")

    /// 􂥖
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let convertibleSideLockOpenFill = SFSymbol(rawValue: "convertible.side.lock.open.fill")

    /// 􂈩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cruzeirosignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "cruzeirosign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cruzeirosignBankBuilding = SFSymbol(rawValue: "cruzeirosign.bank.building")

    /// 􂔪
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let cruzeirosignBankBuildingFill = SFSymbol(rawValue: "cruzeirosign.bank.building.fill")

    /// 􂩄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cruzeirosignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "cruzeirosign.gauge.chart.lefthalf.righthalf")

    /// 􂩮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cruzeirosignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "cruzeirosign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cruzeirosignRing = SFSymbol(rawValue: "cruzeirosign.ring")

    /// 􂯪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cruzeirosignRingDashed = SFSymbol(rawValue: "cruzeirosign.ring.dashed")

    /// 􂊬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cupAndHeatWaves = SFSymbol(rawValue: "cup.and.heat.waves")

    /// 􂊭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let cupAndHeatWavesFill = SFSymbol(rawValue: "cup.and.heat.waves.fill")

    /// 􂈷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let danishkronesignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "danishkronesign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂕅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let danishkronesignBankBuilding = SFSymbol(rawValue: "danishkronesign.bank.building")

    /// 􂕆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let danishkronesignBankBuildingFill = SFSymbol(rawValue: "danishkronesign.bank.building.fill")

    /// 􂩅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let danishkronesignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "danishkronesign.gauge.chart.lefthalf.righthalf")

    /// 􂩯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let danishkronesignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "danishkronesign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let danishkronesignRing = SFSymbol(rawValue: "danishkronesign.ring")

    /// 􂯫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let danishkronesignRingDashed = SFSymbol(rawValue: "danishkronesign.ring.dashed")

    /// 􂧤
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let degreesignCelsius = SFSymbol(rawValue: "degreesign.celsius")

    /// 􂧣
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let degreesignFahrenheit = SFSymbol(rawValue: "degreesign.fahrenheit")

    /// 􂤓
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s MacBook.
    static let desktopcomputerAndMacbook = SFSymbol(rawValue: "desktopcomputer.and.macbook")

    /// 􂠹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let distributeHorizontal = SFSymbol(rawValue: "distribute.horizontal")

    /// 􂠺
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let distributeHorizontalFill = SFSymbol(rawValue: "distribute.horizontal.fill")

    /// 􂠷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let distributeVertical = SFSymbol(rawValue: "distribute.vertical")

    /// 􂠸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let distributeVerticalFill = SFSymbol(rawValue: "distribute.vertical.fill")

    /// 􀈷
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let document = SFSymbol(rawValue: "document")

    /// 􁙡
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let documentBadgeArrowUp = SFSymbol(rawValue: "document.badge.arrow.up")

    /// 􁙢
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let documentBadgeArrowUpFill = SFSymbol(rawValue: "document.badge.arrow.up.fill")

    /// 􀫾
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let documentBadgeClock = SFSymbol(rawValue: "document.badge.clock")

    /// 􀫿
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let documentBadgeClockFill = SFSymbol(rawValue: "document.badge.clock.fill")

    /// 􀩴
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let documentBadgeEllipsis = SFSymbol(rawValue: "document.badge.ellipsis")

    /// 􀩵
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let documentBadgeEllipsisFill = SFSymbol(rawValue: "document.badge.ellipsis.fill")

    /// 􀩚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let documentBadgeGearshape = SFSymbol(rawValue: "document.badge.gearshape")

    /// 􀩛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let documentBadgeGearshapeFill = SFSymbol(rawValue: "document.badge.gearshape.fill")

    /// 􀣗
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor
    /// - Hierarchical
    static let documentBadgePlus = SFSymbol(rawValue: "document.badge.plus")

    /// 􀣘
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor
    /// - Hierarchical
    static let documentBadgePlusFill = SFSymbol(rawValue: "document.badge.plus.fill")

    /// 􀈹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let documentCircle = SFSymbol(rawValue: "document.circle")

    /// 􀈺
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let documentCircleFill = SFSymbol(rawValue: "document.circle.fill")

    /// 􀈸
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let documentFill = SFSymbol(rawValue: "document.fill")

    /// 􀉃
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let documentOnClipboard = SFSymbol(rawValue: "document.on.clipboard")

    /// 􀉄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let documentOnClipboardFill = SFSymbol(rawValue: "document.on.clipboard.fill")

    /// 􀉁
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let documentOnDocument = SFSymbol(rawValue: "document.on.document")

    /// 􀉂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let documentOnDocumentFill = SFSymbol(rawValue: "document.on.document.fill")

    /// 􀎾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let documentViewfinder = SFSymbol(rawValue: "document.viewfinder")

    /// 􀡢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let documentViewfinderFill = SFSymbol(rawValue: "document.viewfinder.fill")

    /// 􁎣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dollarsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "dollarsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂓲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dollarsignBankBuilding = SFSymbol(rawValue: "dollarsign.bank.building")

    /// 􂓳
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let dollarsignBankBuildingFill = SFSymbol(rawValue: "dollarsign.bank.building.fill")

    /// 􂧈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dollarsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "dollarsign.gauge.chart.lefthalf.righthalf")

    /// 􂧉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dollarsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "dollarsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂮈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dollarsignRing = SFSymbol(rawValue: "dollarsign.ring")

    /// 􂮇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dollarsignRingDashed = SFSymbol(rawValue: "dollarsign.ring.dashed")

    /// 􂈛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dongsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "dongsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dongsignBankBuilding = SFSymbol(rawValue: "dongsign.bank.building")

    /// 􂔎
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let dongsignBankBuildingFill = SFSymbol(rawValue: "dongsign.bank.building.fill")

    /// 􂩆
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dongsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "dongsign.gauge.chart.lefthalf.righthalf")

    /// 􂩰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dongsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "dongsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰖
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dongsignRing = SFSymbol(rawValue: "dongsign.ring")

    /// 􂯬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let dongsignRingDashed = SFSymbol(rawValue: "dongsign.ring.dashed")

    /// 􂖛
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let drone = SFSymbol(rawValue: "drone")

    /// 􂖜
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let droneFill = SFSymbol(rawValue: "drone.fill")

    /// 􂂱
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let duffleBag = SFSymbol(rawValue: "duffle.bag")

    /// 􂂲
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let duffleBagFill = SFSymbol(rawValue: "duffle.bag.fill")

    /// 􀳼
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor
    static let ecgTextPage = SymbolWith1Localization<Rtl>(rawValue: "ecg.text.page")

    /// 􀳽
    /// 2 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    static let ecgTextPageFill = SymbolWith1Localization<Rtl>(rawValue: "ecg.text.page.fill")

    /// 􂥟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let engineEmissionAndExclamationmark = SFSymbol(rawValue: "engine.emission.and.exclamationmark")

    /// 􂋋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let engineEmissionAndFilter = SFSymbol(rawValue: "engine.emission.and.filter")

    /// 􀦗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let envelopeAndArrowTriangleheadBranch = SFSymbol(rawValue: "envelope.and.arrow.trianglehead.branch")

    /// 􀦘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let envelopeAndArrowTriangleheadBranchFill = SFSymbol(rawValue: "envelope.and.arrow.trianglehead.branch.fill")

    /// 􂙡
    /// 2 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    static let envelopeFront = SymbolWith1Localization<Rtl>(rawValue: "envelope.front")

    /// 􂙢
    /// 2 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    static let envelopeFrontFill = SymbolWith1Localization<Rtl>(rawValue: "envelope.front.fill")

    /// 􂈚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurosignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "eurosign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurosignBankBuilding = SFSymbol(rawValue: "eurosign.bank.building")

    /// 􂔌
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let eurosignBankBuildingFill = SFSymbol(rawValue: "eurosign.bank.building.fill")

    /// 􂩇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurosignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "eurosign.gauge.chart.lefthalf.righthalf")

    /// 􂩱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurosignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "eurosign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurosignRing = SFSymbol(rawValue: "eurosign.ring")

    /// 􂯭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurosignRingDashed = SFSymbol(rawValue: "eurosign.ring.dashed")

    /// 􂈸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurozonesignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "eurozonesign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂕇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurozonesignBankBuilding = SFSymbol(rawValue: "eurozonesign.bank.building")

    /// 􂕈
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let eurozonesignBankBuildingFill = SFSymbol(rawValue: "eurozonesign.bank.building.fill")

    /// 􂩈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurozonesignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "eurozonesign.gauge.chart.lefthalf.righthalf")

    /// 􂩲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurozonesignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "eurozonesign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurozonesignRing = SFSymbol(rawValue: "eurozonesign.ring")

    /// 􂯮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let eurozonesignRingDashed = SFSymbol(rawValue: "eurozonesign.ring.dashed")

    /// 􀢤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let exclamationmarkArrowTrianglehead2ClockwiseRotate90 = SFSymbol(rawValue: "exclamationmark.arrow.trianglehead.2.clockwise.rotate.90")

    /// 􀱨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let exclamationmarkArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "exclamationmark.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂝗
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figure2LeftHoldinghands = SFSymbol(rawValue: "figure.2.left.holdinghands")

    /// 􂜺
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figure2RightHoldinghands = SFSymbol(rawValue: "figure.2.right.holdinghands")

    /// 􂛽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureAmericanFootballCircle = SFSymbol(rawValue: "figure.american.football.circle")

    /// 􂛾
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureAmericanFootballCircleFill = SFSymbol(rawValue: "figure.american.football.circle.fill")

    /// 􂛿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureArcheryCircle = SFSymbol(rawValue: "figure.archery.circle")

    /// 􂜀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureArcheryCircleFill = SFSymbol(rawValue: "figure.archery.circle.fill")

    /// 􂜁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureAustralianFootballCircle = SFSymbol(rawValue: "figure.australian.football.circle")

    /// 􂜂
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureAustralianFootballCircleFill = SFSymbol(rawValue: "figure.australian.football.circle.fill")

    /// 􂜃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureBadmintonCircle = SFSymbol(rawValue: "figure.badminton.circle")

    /// 􂜄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureBadmintonCircleFill = SFSymbol(rawValue: "figure.badminton.circle.fill")

    /// 􂜅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureBarreCircle = SFSymbol(rawValue: "figure.barre.circle")

    /// 􂜆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureBarreCircleFill = SFSymbol(rawValue: "figure.barre.circle.fill")

    /// 􂜇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureBaseballCircle = SFSymbol(rawValue: "figure.baseball.circle")

    /// 􂜈
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureBaseballCircleFill = SFSymbol(rawValue: "figure.baseball.circle.fill")

    /// 􂜉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureBasketballCircle = SFSymbol(rawValue: "figure.basketball.circle")

    /// 􂜊
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureBasketballCircleFill = SFSymbol(rawValue: "figure.basketball.circle.fill")

    /// 􂜋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureBowlingCircle = SFSymbol(rawValue: "figure.bowling.circle")

    /// 􂜌
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureBowlingCircleFill = SFSymbol(rawValue: "figure.bowling.circle.fill")

    /// 􂜍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureBoxingCircle = SFSymbol(rawValue: "figure.boxing.circle")

    /// 􂜎
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureBoxingCircleFill = SFSymbol(rawValue: "figure.boxing.circle.fill")

    /// 􂚝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureClimbingCircle = SFSymbol(rawValue: "figure.climbing.circle")

    /// 􂚞
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureClimbingCircleFill = SFSymbol(rawValue: "figure.climbing.circle.fill")

    /// 􂜏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureCooldownCircle = SFSymbol(rawValue: "figure.cooldown.circle")

    /// 􂜐
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureCooldownCircleFill = SFSymbol(rawValue: "figure.cooldown.circle.fill")

    /// 􂚃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureCoreTrainingCircle = SFSymbol(rawValue: "figure.core.training.circle")

    /// 􂚄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureCoreTrainingCircleFill = SFSymbol(rawValue: "figure.core.training.circle.fill")

    /// 􂜑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureCricketCircle = SFSymbol(rawValue: "figure.cricket.circle")

    /// 􂜒
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureCricketCircleFill = SFSymbol(rawValue: "figure.cricket.circle.fill")

    /// 􂜓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureCrossTrainingCircle = SFSymbol(rawValue: "figure.cross.training.circle")

    /// 􂜔
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureCrossTrainingCircleFill = SFSymbol(rawValue: "figure.cross.training.circle.fill")

    /// 􂜕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureCurlingCircle = SFSymbol(rawValue: "figure.curling.circle")

    /// 􂜖
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureCurlingCircleFill = SFSymbol(rawValue: "figure.curling.circle.fill")

    /// 􂜗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureDanceCircle = SFSymbol(rawValue: "figure.dance.circle")

    /// 􂜘
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureDanceCircleFill = SFSymbol(rawValue: "figure.dance.circle.fill")

    /// 􂚅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureDiscSportsCircle = SFSymbol(rawValue: "figure.disc.sports.circle")

    /// 􂚥
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureDiscSportsCircleFill = SFSymbol(rawValue: "figure.disc.sports.circle.fill")

    /// 􂜜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureEllipticalCircle = SFSymbol(rawValue: "figure.elliptical.circle")

    /// 􂜝
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureEllipticalCircleFill = SFSymbol(rawValue: "figure.elliptical.circle.fill")

    /// 􂜞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureEquestrianSportsCircle = SFSymbol(rawValue: "figure.equestrian.sports.circle")

    /// 􂜟
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureEquestrianSportsCircleFill = SFSymbol(rawValue: "figure.equestrian.sports.circle.fill")

    /// 􂜠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureFencingCircle = SFSymbol(rawValue: "figure.fencing.circle")

    /// 􂜡
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureFencingCircleFill = SFSymbol(rawValue: "figure.fencing.circle.fill")

    /// 􂞣
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureFieldHockey = SFSymbol(rawValue: "figure.field.hockey")

    /// 􂞤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureFieldHockeyCircle = SFSymbol(rawValue: "figure.field.hockey.circle")

    /// 􂞿
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureFieldHockeyCircleFill = SFSymbol(rawValue: "figure.field.hockey.circle.fill")

    /// 􂚣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureFishingCircle = SFSymbol(rawValue: "figure.fishing.circle")

    /// 􂚤
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureFishingCircleFill = SFSymbol(rawValue: "figure.fishing.circle.fill")

    /// 􂜚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureFlexibilityCircle = SFSymbol(rawValue: "figure.flexibility.circle")

    /// 􂜛
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureFlexibilityCircleFill = SFSymbol(rawValue: "figure.flexibility.circle.fill")

    /// 􂜨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureGolfCircle = SFSymbol(rawValue: "figure.golf.circle")

    /// 􂜩
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureGolfCircleFill = SFSymbol(rawValue: "figure.golf.circle.fill")

    /// 􂜪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureGymnasticsCircle = SFSymbol(rawValue: "figure.gymnastics.circle")

    /// 􂜫
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureGymnasticsCircleFill = SFSymbol(rawValue: "figure.gymnastics.circle.fill")

    /// 􂜬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureHandCyclingCircle = SFSymbol(rawValue: "figure.hand.cycling.circle")

    /// 􂜭
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureHandCyclingCircleFill = SFSymbol(rawValue: "figure.hand.cycling.circle.fill")

    /// 􂛇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureHandballCircle = SFSymbol(rawValue: "figure.handball.circle")

    /// 􂛈
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureHandballCircleFill = SFSymbol(rawValue: "figure.handball.circle.fill")

    /// 􂐿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureHighintensityIntervaltrainingCircle = SFSymbol(rawValue: "figure.highintensity.intervaltraining.circle")

    /// 􂑀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureHighintensityIntervaltrainingCircleFill = SFSymbol(rawValue: "figure.highintensity.intervaltraining.circle.fill")

    /// 􂕟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureHikingCircle = SFSymbol(rawValue: "figure.hiking.circle")

    /// 􂕠
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureHikingCircleFill = SFSymbol(rawValue: "figure.hiking.circle.fill")

    /// 􂕡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureHockeyCircle = SFSymbol(rawValue: "figure.hockey.circle")

    /// 􂕢
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureHockeyCircleFill = SFSymbol(rawValue: "figure.hockey.circle.fill")

    /// 􂕣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureHuntingCircle = SFSymbol(rawValue: "figure.hunting.circle")

    /// 􂕤
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureHuntingCircleFill = SFSymbol(rawValue: "figure.hunting.circle.fill")

    /// 􂟇
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureIceHockey = SFSymbol(rawValue: "figure.ice.hockey")

    /// 􂟈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureIceHockeyCircle = SFSymbol(rawValue: "figure.ice.hockey.circle")

    /// 􂟉
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureIceHockeyCircleFill = SFSymbol(rawValue: "figure.ice.hockey.circle.fill")

    /// 􂟀
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureIceSkating = SFSymbol(rawValue: "figure.ice.skating")

    /// 􂟁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureIceSkatingCircle = SFSymbol(rawValue: "figure.ice.skating.circle")

    /// 􂟂
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureIceSkatingCircleFill = SFSymbol(rawValue: "figure.ice.skating.circle.fill")

    /// 􂕥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureIndoorCycleCircle = SFSymbol(rawValue: "figure.indoor.cycle.circle")

    /// 􂕦
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureIndoorCycleCircleFill = SFSymbol(rawValue: "figure.indoor.cycle.circle.fill")

    /// 􁌋
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureIndoorRowing = SFSymbol(rawValue: "figure.indoor.rowing")

    /// 􂖁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureIndoorRowingCircle = SFSymbol(rawValue: "figure.indoor.rowing.circle")

    /// 􂖂
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureIndoorRowingCircleFill = SFSymbol(rawValue: "figure.indoor.rowing.circle.fill")

    /// 􁔿
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureIndoorSoccer = SFSymbol(rawValue: "figure.indoor.soccer")

    /// 􂖉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureIndoorSoccerCircle = SFSymbol(rawValue: "figure.indoor.soccer.circle")

    /// 􂖊
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureIndoorSoccerCircleFill = SFSymbol(rawValue: "figure.indoor.soccer.circle.fill")

    /// 􂙽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureJumpropeCircle = SFSymbol(rawValue: "figure.jumprope.circle")

    /// 􂙾
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureJumpropeCircleFill = SFSymbol(rawValue: "figure.jumprope.circle.fill")

    /// 􂕧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureKickboxingCircle = SFSymbol(rawValue: "figure.kickboxing.circle")

    /// 􂕨
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureKickboxingCircleFill = SFSymbol(rawValue: "figure.kickboxing.circle.fill")

    /// 􂕩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureLacrosseCircle = SFSymbol(rawValue: "figure.lacrosse.circle")

    /// 􂕪
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureLacrosseCircleFill = SFSymbol(rawValue: "figure.lacrosse.circle.fill")

    /// 􂕫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureMartialArtsCircle = SFSymbol(rawValue: "figure.martial.arts.circle")

    /// 􂕬
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureMartialArtsCircleFill = SFSymbol(rawValue: "figure.martial.arts.circle.fill")

    /// 􂕭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureMindAndBodyCircle = SFSymbol(rawValue: "figure.mind.and.body.circle")

    /// 􂕮
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureMindAndBodyCircleFill = SFSymbol(rawValue: "figure.mind.and.body.circle.fill")

    /// 􂕯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureMixedCardioCircle = SFSymbol(rawValue: "figure.mixed.cardio.circle")

    /// 􂕰
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureMixedCardioCircleFill = SFSymbol(rawValue: "figure.mixed.cardio.circle.fill")

    /// 􂕱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureOpenWaterSwimCircle = SFSymbol(rawValue: "figure.open.water.swim.circle")

    /// 􂕲
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureOpenWaterSwimCircleFill = SFSymbol(rawValue: "figure.open.water.swim.circle.fill")

    /// 􂛉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureOutdoorCycleCircle = SFSymbol(rawValue: "figure.outdoor.cycle.circle")

    /// 􂛊
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureOutdoorCycleCircleFill = SFSymbol(rawValue: "figure.outdoor.cycle.circle.fill")

    /// 􂞼
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureOutdoorRowing = SFSymbol(rawValue: "figure.outdoor.rowing")

    /// 􂞽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureOutdoorRowingCircle = SFSymbol(rawValue: "figure.outdoor.rowing.circle")

    /// 􂞾
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureOutdoorRowingCircleFill = SFSymbol(rawValue: "figure.outdoor.rowing.circle.fill")

    /// 􂟄
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureOutdoorSoccer = SFSymbol(rawValue: "figure.outdoor.soccer")

    /// 􂟅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureOutdoorSoccerCircle = SFSymbol(rawValue: "figure.outdoor.soccer.circle")

    /// 􂟆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureOutdoorSoccerCircleFill = SFSymbol(rawValue: "figure.outdoor.soccer.circle.fill")

    /// 􂕵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figurePickleballCircle = SFSymbol(rawValue: "figure.pickleball.circle")

    /// 􂕶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figurePickleballCircleFill = SFSymbol(rawValue: "figure.pickleball.circle.fill")

    /// 􂕷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figurePilatesCircle = SFSymbol(rawValue: "figure.pilates.circle")

    /// 􂕸
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figurePilatesCircleFill = SFSymbol(rawValue: "figure.pilates.circle.fill")

    /// 􂕹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figurePlayCircle = SFSymbol(rawValue: "figure.play.circle")

    /// 􂕺
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figurePlayCircleFill = SFSymbol(rawValue: "figure.play.circle.fill")

    /// 􂕻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figurePoolSwimCircle = SFSymbol(rawValue: "figure.pool.swim.circle")

    /// 􂕼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figurePoolSwimCircleFill = SFSymbol(rawValue: "figure.pool.swim.circle.fill")

    /// 􂕽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureRacquetballCircle = SFSymbol(rawValue: "figure.racquetball.circle")

    /// 􂕾
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureRacquetballCircleFill = SFSymbol(rawValue: "figure.racquetball.circle.fill")

    /// 􂛹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureRollCircle = SFSymbol(rawValue: "figure.roll.circle")

    /// 􂛺
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureRollCircleFill = SFSymbol(rawValue: "figure.roll.circle.fill")

    /// 􂛻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureRollRunningpaceCircle = SFSymbol(rawValue: "figure.roll.runningpace.circle")

    /// 􂛼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureRollRunningpaceCircleFill = SFSymbol(rawValue: "figure.roll.runningpace.circle.fill")

    /// 􂕿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureRollingCircle = SFSymbol(rawValue: "figure.rolling.circle")

    /// 􂖀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureRollingCircleFill = SFSymbol(rawValue: "figure.rolling.circle.fill")

    /// 􂖃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureRugbyCircle = SFSymbol(rawValue: "figure.rugby.circle")

    /// 􂖄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureRugbyCircleFill = SFSymbol(rawValue: "figure.rugby.circle.fill")

    /// 􂛅
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureRunTreadmill = SFSymbol(rawValue: "figure.run.treadmill")

    /// 􂛵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureRunTreadmillCircle = SFSymbol(rawValue: "figure.run.treadmill.circle")

    /// 􂛶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureRunTreadmillCircleFill = SFSymbol(rawValue: "figure.run.treadmill.circle.fill")

    /// 􂙻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSailingCircle = SFSymbol(rawValue: "figure.sailing.circle")

    /// 􂙼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSailingCircleFill = SFSymbol(rawValue: "figure.sailing.circle.fill")

    /// 􂒭
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats1 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.1")

    /// 􂒪
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats11 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.1.1")

    /// 􂒃
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats11Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.1.1.fill")

    /// 􂒩
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats12 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.1.2")

    /// 􂒂
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats12Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.1.2.fill")

    /// 􂒆
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats1Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.1.fill")

    /// 􂒬
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats2 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2")

    /// 􂒨
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats22 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2")

    /// 􂒤
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats222 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.2")

    /// 􂑾
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats222Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.2.fill")

    /// 􂒥
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats223 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.3")

    /// 􂒠
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats223Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.3.fill")

    /// 􂒁
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats22Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.2.fill")

    /// 􂒧
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats23 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3")

    /// 􂒣
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats232 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.2")

    /// 􂑽
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats232Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.2.fill")

    /// 􂒢
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats233 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.3")

    /// 􂑼
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats233Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.3.fill")

    /// 􂒀
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats23Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.3.fill")

    /// 􂒅
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats2Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.2.fill")

    /// 􂒫
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats3 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.3")

    /// 􂒦
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats33 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.3.3")

    /// 􂒡
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats333 = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.3.3.3")

    /// 􂑻
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats333Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.3.3.3.fill")

    /// 􂑿
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats33Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.3.3.fill")

    /// 􂒄
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSeatbeltLeftDriveSeats3Fill = SFSymbol(rawValue: "figure.seated.seatbelt.left.drive.seats.3.fill")

    /// 􁺼
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSideLeft = SFSymbol(rawValue: "figure.seated.side.left")

    /// 􁁶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftAirDistributionLower = SFSymbol(rawValue: "figure.seated.side.left.air.distribution.lower")

    /// 􁁵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftAirDistributionMiddle = SFSymbol(rawValue: "figure.seated.side.left.air.distribution.middle")

    /// 􁁸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftAirDistributionMiddleAndLower = SFSymbol(rawValue: "figure.seated.side.left.air.distribution.middle.and.lower")

    /// 􁻀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftAirDistributionMiddleAndLowerAngled = SFSymbol(rawValue: "figure.seated.side.left.air.distribution.middle.and.lower.angled")

    /// 􁁷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftAirDistributionUpper = SFSymbol(rawValue: "figure.seated.side.left.air.distribution.upper")

    /// 􁺿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftAirDistributionUpperAngledAndLowerAngled = SFSymbol(rawValue: "figure.seated.side.left.air.distribution.upper.angled.and.lower.angled")

    /// 􁺾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftAirDistributionUpperAngledAndMiddle = SFSymbol(rawValue: "figure.seated.side.left.air.distribution.upper.angled.and.middle")

    /// 􁺽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftAirDistributionUpperAngledAndMiddleAndLowerAngled = SFSymbol(rawValue: "figure.seated.side.left.air.distribution.upper.angled.and.middle.and.lower.angled")

    /// 􁊍
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSeatedSideLeftAirbagOff = SFSymbol(rawValue: "figure.seated.side.left.airbag.off")

    /// 􁉻
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSeatedSideLeftAirbagOff2 = SFSymbol(rawValue: "figure.seated.side.left.airbag.off.2")

    /// 􀿧
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSeatedSideLeftAirbagOn = SFSymbol(rawValue: "figure.seated.side.left.airbag.on")

    /// 􁞚
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSeatedSideLeftAirbagOn2 = SFSymbol(rawValue: "figure.seated.side.left.airbag.on.2")

    /// 􁲍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftAutomatic = SFSymbol(rawValue: "figure.seated.side.left.automatic")

    /// 􂟃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftFan = SFSymbol(rawValue: "figure.seated.side.left.fan")

    /// 􁦂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftSteeringwheel = SFSymbol(rawValue: "figure.seated.side.left.steeringwheel")

    /// 􁁹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftWindshieldFrontAndHeatWaves = SFSymbol(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves")

    /// 􁻒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionLower = SFSymbol(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.lower")

    /// 􁻑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionMiddle = SFSymbol(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.middle")

    /// 􁻍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionMiddleAndLower = SFSymbol(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.middle.and.lower")

    /// 􁻐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpper = SFSymbol(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper")

    /// 􁻏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpperAndLower = SFSymbol(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.lower")

    /// 􁻎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddle = SFSymbol(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.middle")

    /// 􁻌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideLeftWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddleAndLower = SFSymbol(rawValue: "figure.seated.side.left.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower")

    /// 􂧏
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSeatedSideRight = SFSymbol(rawValue: "figure.seated.side.right")

    /// 􂧑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightAirDistributionLower = SFSymbol(rawValue: "figure.seated.side.right.air.distribution.lower")

    /// 􂧒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightAirDistributionMiddle = SFSymbol(rawValue: "figure.seated.side.right.air.distribution.middle")

    /// 􂧓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightAirDistributionMiddleAndLower = SFSymbol(rawValue: "figure.seated.side.right.air.distribution.middle.and.lower")

    /// 􂧗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightAirDistributionMiddleAndLowerAngled = SFSymbol(rawValue: "figure.seated.side.right.air.distribution.middle.and.lower.angled")

    /// 􂧐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightAirDistributionUpper = SFSymbol(rawValue: "figure.seated.side.right.air.distribution.upper")

    /// 􂧖
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightAirDistributionUpperAngledAndLowerAngled = SFSymbol(rawValue: "figure.seated.side.right.air.distribution.upper.angled.and.lower.angled")

    /// 􂧕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightAirDistributionUpperAngledAndMiddle = SFSymbol(rawValue: "figure.seated.side.right.air.distribution.upper.angled.and.middle")

    /// 􂧔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightAirDistributionUpperAngledAndMiddleAndLowerAngled = SFSymbol(rawValue: "figure.seated.side.right.air.distribution.upper.angled.and.middle.and.lower.angled")

    /// 􂧌
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSeatedSideRightAirbagOff = SFSymbol(rawValue: "figure.seated.side.right.airbag.off")

    /// 􂧎
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSeatedSideRightAirbagOff2 = SFSymbol(rawValue: "figure.seated.side.right.airbag.off.2")

    /// 􂧋
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSeatedSideRightAirbagOn = SFSymbol(rawValue: "figure.seated.side.right.airbag.on")

    /// 􂧍
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSeatedSideRightAirbagOn2 = SFSymbol(rawValue: "figure.seated.side.right.airbag.on.2")

    /// 􂧡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightAutomatic = SFSymbol(rawValue: "figure.seated.side.right.automatic")

    /// 􂧢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightFan = SFSymbol(rawValue: "figure.seated.side.right.fan")

    /// 􂧠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightSteeringwheel = SFSymbol(rawValue: "figure.seated.side.right.steeringwheel")

    /// 􂧘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightWindshieldFrontAndHeatWaves = SFSymbol(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves")

    /// 􂧞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionLower = SFSymbol(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.lower")

    /// 􂧟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionMiddle = SFSymbol(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.middle")

    /// 􂧚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionMiddleAndLower = SFSymbol(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.middle.and.lower")

    /// 􂧝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpper = SFSymbol(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper")

    /// 􂧜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpperAndLower = SFSymbol(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.lower")

    /// 􂧛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddle = SFSymbol(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.middle")

    /// 􂧙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideRightWindshieldFrontAndHeatWavesAirDistributionUpperAndMiddleAndLower = SFSymbol(rawValue: "figure.seated.side.right.windshield.front.and.heat.waves.air.distribution.upper.and.middle.and.lower")

    /// 􁔽
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureSkateboarding = SFSymbol(rawValue: "figure.skateboarding")

    /// 􂖅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSkateboardingCircle = SFSymbol(rawValue: "figure.skateboarding.circle")

    /// 􂖆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSkateboardingCircleFill = SFSymbol(rawValue: "figure.skateboarding.circle.fill")

    /// 􂚁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSkiingCrosscountryCircle = SFSymbol(rawValue: "figure.skiing.crosscountry.circle")

    /// 􂚂
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSkiingCrosscountryCircleFill = SFSymbol(rawValue: "figure.skiing.crosscountry.circle.fill")

    /// 􂙿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSkiingDownhillCircle = SFSymbol(rawValue: "figure.skiing.downhill.circle")

    /// 􂚀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSkiingDownhillCircleFill = SFSymbol(rawValue: "figure.skiing.downhill.circle.fill")

    /// 􂖇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSnowboardingCircle = SFSymbol(rawValue: "figure.snowboarding.circle")

    /// 􂖈
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSnowboardingCircleFill = SFSymbol(rawValue: "figure.snowboarding.circle.fill")

    /// 􂙹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSocialdanceCircle = SFSymbol(rawValue: "figure.socialdance.circle")

    /// 􂙺
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSocialdanceCircleFill = SFSymbol(rawValue: "figure.socialdance.circle.fill")

    /// 􂖋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSoftballCircle = SFSymbol(rawValue: "figure.softball.circle")

    /// 􂖌
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSoftballCircleFill = SFSymbol(rawValue: "figure.softball.circle.fill")

    /// 􂖍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSquashCircle = SFSymbol(rawValue: "figure.squash.circle")

    /// 􂖎
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSquashCircleFill = SFSymbol(rawValue: "figure.squash.circle.fill")

    /// 􂖏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureStairStepperCircle = SFSymbol(rawValue: "figure.stair.stepper.circle")

    /// 􂖐
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureStairStepperCircleFill = SFSymbol(rawValue: "figure.stair.stepper.circle.fill")

    /// 􂖑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureStairsCircle = SFSymbol(rawValue: "figure.stairs.circle")

    /// 􂖒
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureStairsCircleFill = SFSymbol(rawValue: "figure.stairs.circle.fill")

    /// 􂡩
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureStandDress = SFSymbol(rawValue: "figure.stand.dress")

    /// 􁙂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureStandDressLineVerticalFigure = SFSymbol(rawValue: "figure.stand.dress.line.vertical.figure")

    /// 􂖓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureStepTrainingCircle = SFSymbol(rawValue: "figure.step.training.circle")

    /// 􂖔
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureStepTrainingCircleFill = SFSymbol(rawValue: "figure.step.training.circle.fill")

    /// 􂜦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureStrengthtrainingFunctionalCircle = SFSymbol(rawValue: "figure.strengthtraining.functional.circle")

    /// 􂜧
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureStrengthtrainingFunctionalCircleFill = SFSymbol(rawValue: "figure.strengthtraining.functional.circle.fill")

    /// 􂜾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureStrengthtrainingTraditionalCircle = SFSymbol(rawValue: "figure.strengthtraining.traditional.circle")

    /// 􂜿
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureStrengthtrainingTraditionalCircleFill = SFSymbol(rawValue: "figure.strengthtraining.traditional.circle.fill")

    /// 􂖕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSurfingCircle = SFSymbol(rawValue: "figure.surfing.circle")

    /// 􂖖
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureSurfingCircleFill = SFSymbol(rawValue: "figure.surfing.circle.fill")

    /// 􂖗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureTableTennisCircle = SFSymbol(rawValue: "figure.table.tennis.circle")

    /// 􂖘
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureTableTennisCircleFill = SFSymbol(rawValue: "figure.table.tennis.circle.fill")

    /// 􂚉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureTaichiCircle = SFSymbol(rawValue: "figure.taichi.circle")

    /// 􂚊
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureTaichiCircleFill = SFSymbol(rawValue: "figure.taichi.circle.fill")

    /// 􂜼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureTennisCircle = SFSymbol(rawValue: "figure.tennis.circle")

    /// 􂜽
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureTennisCircleFill = SFSymbol(rawValue: "figure.tennis.circle.fill")

    /// 􂙷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureTrackAndFieldCircle = SFSymbol(rawValue: "figure.track.and.field.circle")

    /// 􂙸
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureTrackAndFieldCircleFill = SFSymbol(rawValue: "figure.track.and.field.circle.fill")

    /// 􂝀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureVolleyballCircle = SFSymbol(rawValue: "figure.volleyball.circle")

    /// 􂝁
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureVolleyballCircleFill = SFSymbol(rawValue: "figure.volleyball.circle.fill")

    /// 􂛆
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let figureWalkTreadmill = SFSymbol(rawValue: "figure.walk.treadmill")

    /// 􂛷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureWalkTreadmillCircle = SFSymbol(rawValue: "figure.walk.treadmill.circle")

    /// 􂛸
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureWalkTreadmillCircleFill = SFSymbol(rawValue: "figure.walk.treadmill.circle.fill")

    /// 􁓚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureWalkTriangle = SFSymbol(rawValue: "figure.walk.triangle")

    /// 􁓛
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureWalkTriangleFill = SFSymbol(rawValue: "figure.walk.triangle.fill")

    /// 􂙵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureWaterFitnessCircle = SFSymbol(rawValue: "figure.water.fitness.circle")

    /// 􂙶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureWaterFitnessCircleFill = SFSymbol(rawValue: "figure.water.fitness.circle.fill")

    /// 􂝂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureWaterpoloCircle = SFSymbol(rawValue: "figure.waterpolo.circle")

    /// 􂝃
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureWaterpoloCircleFill = SFSymbol(rawValue: "figure.waterpolo.circle.fill")

    /// 􂝄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureWrestlingCircle = SFSymbol(rawValue: "figure.wrestling.circle")

    /// 􂝅
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureWrestlingCircleFill = SFSymbol(rawValue: "figure.wrestling.circle.fill")

    /// 􂝆
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureYogaCircle = SFSymbol(rawValue: "figure.yoga.circle")

    /// 􂝇
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureYogaCircleFill = SFSymbol(rawValue: "figure.yoga.circle.fill")

    /// 􂦈
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let fireExtinguisher = SFSymbol(rawValue: "fire.extinguisher")

    /// 􂦉
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let fireExtinguisherFill = SFSymbol(rawValue: "fire.extinguisher.fill")

    /// 􁙌
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let flagPatternCheckered = SFSymbol(rawValue: "flag.pattern.checkered")

    /// 􁜔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let flagPatternCheckered2Crossed = SFSymbol(rawValue: "flag.pattern.checkered.2.crossed")

    /// 􁝼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let flagPatternCheckeredCircle = SFSymbol(rawValue: "flag.pattern.checkered.circle")

    /// 􁝽
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let flagPatternCheckeredCircleFill = SFSymbol(rawValue: "flag.pattern.checkered.circle.fill")

    /// 􂈗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let florinsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "florinsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let florinsignBankBuilding = SFSymbol(rawValue: "florinsign.bank.building")

    /// 􂔆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let florinsignBankBuildingFill = SFSymbol(rawValue: "florinsign.bank.building.fill")

    /// 􂩉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let florinsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "florinsign.gauge.chart.lefthalf.righthalf")

    /// 􂩳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let florinsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "florinsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let florinsignRing = SFSymbol(rawValue: "florinsign.ring")

    /// 􂯯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let florinsignRingDashed = SFSymbol(rawValue: "florinsign.ring.dashed")

    /// 􂥢
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let fluidBatteryblock = SFSymbol(rawValue: "fluid.batteryblock")

    /// 􂮔
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let fluidCoolant = SFSymbol(rawValue: "fluid.coolant")

    /// 􂞈
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let formfittingGamecontroller = SFSymbol(rawValue: "formfitting.gamecontroller")

    /// 􂞉
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let formfittingGamecontrollerFill = SFSymbol(rawValue: "formfitting.gamecontroller.fill")

    /// 􂈖
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let francsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "francsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let francsignBankBuilding = SFSymbol(rawValue: "francsign.bank.building")

    /// 􂔄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let francsignBankBuildingFill = SFSymbol(rawValue: "francsign.bank.building.fill")

    /// 􂩊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let francsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "francsign.gauge.chart.lefthalf.righthalf")

    /// 􂩴
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let francsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "francsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let francsignRing = SFSymbol(rawValue: "francsign.ring")

    /// 􂯰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let francsignRingDashed = SFSymbol(rawValue: "francsign.ring.dashed")

    /// 􂥫
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let fuelpumpAndFilter = SFSymbol(rawValue: "fuelpump.and.filter")

    /// 􂝈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let gamecontrollerCircle = SFSymbol(rawValue: "gamecontroller.circle")

    /// 􂝉
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let gamecontrollerCircleFill = SFSymbol(rawValue: "gamecontroller.circle.fill")

    /// 􁊐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let gaugeOpenWithLinesNeedle33percentAndArrowTriangleheadFrom0percentTo50percent = SFSymbol(rawValue: "gauge.open.with.lines.needle.33percent.and.arrow.trianglehead.from.0percent.to.50percent")

    /// 􁐂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let gearshapeArrowTrianglehead2ClockwiseRotate90 = SFSymbol(rawValue: "gearshape.arrow.trianglehead.2.clockwise.rotate.90")

    /// 􂪱
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let greaterthanorequalto = SFSymbol(rawValue: "greaterthanorequalto")

    /// 􂫋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let greaterthanorequaltoCircle = SFSymbol(rawValue: "greaterthanorequalto.circle")

    /// 􂫌
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let greaterthanorequaltoCircleFill = SFSymbol(rawValue: "greaterthanorequalto.circle.fill")

    /// 􂫍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let greaterthanorequaltoSquare = SFSymbol(rawValue: "greaterthanorequalto.square")

    /// 􂫎
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let greaterthanorequaltoSquareFill = SFSymbol(rawValue: "greaterthanorequalto.square.fill")

    /// 􂈦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let guaranisignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "guaranisign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let guaranisignBankBuilding = SFSymbol(rawValue: "guaranisign.bank.building")

    /// 􂔤
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let guaranisignBankBuildingFill = SFSymbol(rawValue: "guaranisign.bank.building.fill")

    /// 􂩋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let guaranisignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "guaranisign.gauge.chart.lefthalf.righthalf")

    /// 􂩵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let guaranisignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "guaranisign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let guaranisignRing = SFSymbol(rawValue: "guaranisign.ring")

    /// 􂯱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let guaranisignRingDashed = SFSymbol(rawValue: "guaranisign.ring.dashed")

    /// 􂚖
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let handDrawBadgeEllipsis = SFSymbol(rawValue: "hand.draw.badge.ellipsis")

    /// 􂚗
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let handDrawBadgeEllipsisFill = SFSymbol(rawValue: "hand.draw.badge.ellipsis.fill")

    /// 􂤃
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let handPalmFacing = SFSymbol(rawValue: "hand.palm.facing")

    /// 􂤄
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let handPalmFacingFill = SFSymbol(rawValue: "hand.palm.facing.fill")

    /// 􁟱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let handPinch = SFSymbol(rawValue: "hand.pinch")

    /// 􁟲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let handPinchFill = SFSymbol(rawValue: "hand.pinch.fill")

    /// 􂠆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let handPointUpBrailleBadgeEllipsis = SFSymbol(rawValue: "hand.point.up.braille.badge.ellipsis")

    /// 􂠇
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let handPointUpBrailleBadgeEllipsisFill = SFSymbol(rawValue: "hand.point.up.braille.badge.ellipsis.fill")

    /// 􂤁
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let handRaisedPalmFacing = SFSymbol(rawValue: "hand.raised.palm.facing")

    /// 􂤂
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let handRaisedPalmFacingFill = SFSymbol(rawValue: "hand.raised.palm.facing.fill")

    /// 􂲤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let handRays = SFSymbol(rawValue: "hand.rays")

    /// 􂲥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let handRaysFill = SFSymbol(rawValue: "hand.rays.fill")

    /// 􂏨
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let hatCap = SFSymbol(rawValue: "hat.cap")

    /// 􂏩
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let hatCapFill = SFSymbol(rawValue: "hat.cap.fill")

    /// 􂏦
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let hatWidebrim = SFSymbol(rawValue: "hat.widebrim")

    /// 􂏧
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let hatWidebrimFill = SFSymbol(rawValue: "hat.widebrim.fill")

    /// 􁟹
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let headProfileArrowForwardAndVisionPro = SFSymbol(rawValue: "head.profile.arrow.forward.and.vision.pro")

    /// 􂬂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let headphonesSlash = SFSymbol(rawValue: "headphones.slash")

    /// 􂣵
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let headset = SFSymbol(rawValue: "headset")

    /// 􂣶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let headsetCircle = SFSymbol(rawValue: "headset.circle")

    /// 􂣷
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let headsetCircleFill = SFSymbol(rawValue: "headset.circle.fill")

    /// 􂤇
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let heartTextClipboard = SFSymbol(rawValue: "heart.text.clipboard")

    /// 􂤈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let heartTextClipboardFill = SFSymbol(rawValue: "heart.text.clipboard.fill")

    /// 􂬤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let heatWavesAndFan = SFSymbol(rawValue: "heat.waves.and.fan")

    /// 􂞌
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let helmet = SFSymbol(rawValue: "helmet")

    /// 􂞍
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let helmetFill = SFSymbol(rawValue: "helmet.fill")

    /// 􂡔
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hifispeaker2BadgeMinus = SFSymbol(rawValue: "hifispeaker.2.badge.minus")

    /// 􂡕
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hifispeaker2BadgeMinusFill = SFSymbol(rawValue: "hifispeaker.2.badge.minus.fill")

    /// 􂡒
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hifispeaker2BadgePlus = SFSymbol(rawValue: "hifispeaker.2.badge.plus")

    /// 􂡓
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hifispeaker2BadgePlusFill = SFSymbol(rawValue: "hifispeaker.2.badge.plus.fill")

    /// 􂡌
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let hifispeakerAndHomepodBadgeMinus = SFSymbol(rawValue: "hifispeaker.and.homepod.badge.minus")

    /// 􂡍
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let hifispeakerAndHomepodBadgeMinusFill = SFSymbol(rawValue: "hifispeaker.and.homepod.badge.minus.fill")

    /// 􂡊
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let hifispeakerAndHomepodBadgePlus = SFSymbol(rawValue: "hifispeaker.and.homepod.badge.plus")

    /// 􂡋
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let hifispeakerAndHomepodBadgePlusFill = SFSymbol(rawValue: "hifispeaker.and.homepod.badge.plus.fill")

    /// 􀷭
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let hifispeakerAndHomepodMini = SFSymbol(rawValue: "hifispeaker.and.homepod.mini")

    /// 􂠯
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let hifispeakerAndHomepodMiniBadgeMinus = SFSymbol(rawValue: "hifispeaker.and.homepod.mini.badge.minus")

    /// 􂠰
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let hifispeakerAndHomepodMiniBadgeMinusFill = SFSymbol(rawValue: "hifispeaker.and.homepod.mini.badge.minus.fill")

    /// 􂠭
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let hifispeakerAndHomepodMiniBadgePlus = SFSymbol(rawValue: "hifispeaker.and.homepod.mini.badge.plus")

    /// 􂠮
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let hifispeakerAndHomepodMiniBadgePlusFill = SFSymbol(rawValue: "hifispeaker.and.homepod.mini.badge.plus.fill")

    /// 􀷮
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let hifispeakerAndHomepodMiniFill = SFSymbol(rawValue: "hifispeaker.and.homepod.mini.fill")

    /// 􂡸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let hifispeakerArrowForward = SFSymbol(rawValue: "hifispeaker.arrow.forward")

    /// 􂡹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let hifispeakerArrowForwardFill = SFSymbol(rawValue: "hifispeaker.arrow.forward.fill")

    /// 􂡜
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hifispeakerBadgeMinus = SFSymbol(rawValue: "hifispeaker.badge.minus")

    /// 􂡝
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hifispeakerBadgeMinusFill = SFSymbol(rawValue: "hifispeaker.badge.minus.fill")

    /// 􂡚
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hifispeakerBadgePlus = SFSymbol(rawValue: "hifispeaker.badge.plus")

    /// 􂡛
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hifispeakerBadgePlusFill = SFSymbol(rawValue: "hifispeaker.badge.plus.fill")

    /// 􂡀
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepod2BadgeMinus = SFSymbol(rawValue: "homepod.2.badge.minus")

    /// 􂡁
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepod2BadgeMinusFill = SFSymbol(rawValue: "homepod.2.badge.minus.fill")

    /// 􂠾
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepod2BadgePlus = SFSymbol(rawValue: "homepod.2.badge.plus")

    /// 􂠿
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepod2BadgePlusFill = SFSymbol(rawValue: "homepod.2.badge.plus.fill")

    /// 􀷫
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod and HomePod mini.
    static let homepodAndHomepodMini = SFSymbol(rawValue: "homepod.and.homepod.mini")

    /// 􂠧
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod and HomePod mini.
    static let homepodAndHomepodMiniBadgeMinus = SFSymbol(rawValue: "homepod.and.homepod.mini.badge.minus")

    /// 􂠨
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod and HomePod mini.
    static let homepodAndHomepodMiniBadgeMinusFill = SFSymbol(rawValue: "homepod.and.homepod.mini.badge.minus.fill")

    /// 􂠥
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod and HomePod mini.
    static let homepodAndHomepodMiniBadgePlus = SFSymbol(rawValue: "homepod.and.homepod.mini.badge.plus")

    /// 􂠦
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod and HomePod mini.
    static let homepodAndHomepodMiniBadgePlusFill = SFSymbol(rawValue: "homepod.and.homepod.mini.badge.plus.fill")

    /// 􀷬
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod and HomePod mini.
    static let homepodAndHomepodMiniFill = SFSymbol(rawValue: "homepod.and.homepod.mini.fill")

    /// 􂋞
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepodArrowForward = SFSymbol(rawValue: "homepod.arrow.forward")

    /// 􂋟
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepodArrowForwardFill = SFSymbol(rawValue: "homepod.arrow.forward.fill")

    /// 􂋥
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepodBadgeMinus = SFSymbol(rawValue: "homepod.badge.minus")

    /// 􂋦
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepodBadgeMinusFill = SFSymbol(rawValue: "homepod.badge.minus.fill")

    /// 􂋡
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepodBadgePlus = SFSymbol(rawValue: "homepod.badge.plus")

    /// 􂋢
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod.
    static let homepodBadgePlusFill = SFSymbol(rawValue: "homepod.badge.plus.fill")

    /// 􀷧
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMini = SFSymbol(rawValue: "homepod.mini")

    /// 􀷩
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMini2 = SFSymbol(rawValue: "homepod.mini.2")

    /// 􂠟
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMini2BadgeMinus = SFSymbol(rawValue: "homepod.mini.2.badge.minus")

    /// 􂠠
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMini2BadgeMinusFill = SFSymbol(rawValue: "homepod.mini.2.badge.minus.fill")

    /// 􂠝
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMini2BadgePlus = SFSymbol(rawValue: "homepod.mini.2.badge.plus")

    /// 􂠞
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMini2BadgePlusFill = SFSymbol(rawValue: "homepod.mini.2.badge.plus.fill")

    /// 􀷪
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMini2Fill = SFSymbol(rawValue: "homepod.mini.2.fill")

    /// 􂋛
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMiniArrowForward = SFSymbol(rawValue: "homepod.mini.arrow.forward")

    /// 􂋜
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMiniArrowForwardFill = SFSymbol(rawValue: "homepod.mini.arrow.forward.fill")

    /// 􂋗
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMiniBadgeMinus = SFSymbol(rawValue: "homepod.mini.badge.minus")

    /// 􂋘
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMiniBadgeMinusFill = SFSymbol(rawValue: "homepod.mini.badge.minus.fill")

    /// 􂋓
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMiniBadgePlus = SFSymbol(rawValue: "homepod.mini.badge.plus")

    /// 􂋔
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMiniBadgePlusFill = SFSymbol(rawValue: "homepod.mini.badge.plus.fill")

    /// 􀷨
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s HomePod mini.
    static let homepodMiniFill = SFSymbol(rawValue: "homepod.mini.fill")

    /// 􂜶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hourglassBadgeEye = SFSymbol(rawValue: "hourglass.badge.eye")

    /// 􂧄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let houseBadgeExclamationmark = SFSymbol(rawValue: "house.badge.exclamationmark")

    /// 􂧅
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let houseBadgeExclamationmarkFill = SFSymbol(rawValue: "house.badge.exclamationmark.fill")

    /// 􂘞
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let houseBadgeWifi = SFSymbol(rawValue: "house.badge.wifi")

    /// 􂘟
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let houseBadgeWifiFill = SFSymbol(rawValue: "house.badge.wifi.fill")

    /// 􂣊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let houseSlash = SFSymbol(rawValue: "house.slash")

    /// 􂣋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let houseSlashFill = SFSymbol(rawValue: "house.slash.fill")

    /// 􂈤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let hryvniasignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "hryvniasign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let hryvniasignBankBuilding = SFSymbol(rawValue: "hryvniasign.bank.building")

    /// 􂔠
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hryvniasignBankBuildingFill = SFSymbol(rawValue: "hryvniasign.bank.building.fill")

    /// 􂩌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let hryvniasignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "hryvniasign.gauge.chart.lefthalf.righthalf")

    /// 􂩶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let hryvniasignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "hryvniasign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let hryvniasignRing = SFSymbol(rawValue: "hryvniasign.ring")

    /// 􂯲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let hryvniasignRingDashed = SFSymbol(rawValue: "hryvniasign.ring.dashed")

    /// 􂈜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let indianrupeesignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "indianrupeesign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let indianrupeesignBankBuilding = SFSymbol(rawValue: "indianrupeesign.bank.building")

    /// 􂔐
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let indianrupeesignBankBuildingFill = SFSymbol(rawValue: "indianrupeesign.bank.building.fill")

    /// 􂩍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let indianrupeesignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "indianrupeesign.gauge.chart.lefthalf.righthalf")

    /// 􂩷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let indianrupeesignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "indianrupeesign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let indianrupeesignRing = SFSymbol(rawValue: "indianrupeesign.ring")

    /// 􂯳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let indianrupeesignRingDashed = SFSymbol(rawValue: "indianrupeesign.ring.dashed")

    /// 􂞜
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let inhaler = SFSymbol(rawValue: "inhaler")

    /// 􂞝
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let inhalerFill = SFSymbol(rawValue: "inhaler.fill")

    /// 􀴪
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Watch.
    static let insetFilledApplewatchCase = SFSymbol(rawValue: "inset.filled.applewatch.case")

    /// 􀾯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomhalfRectangle = SFSymbol(rawValue: "inset.filled.bottomhalf.rectangle")

    /// 􀽺
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomhalfRectanglePortrait = SFSymbol(rawValue: "inset.filled.bottomhalf.rectangle.portrait")

    /// 􂮡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomhalfTophalfRectangle = SFSymbol(rawValue: "inset.filled.bottomhalf.tophalf.rectangle")

    /// 􁁫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomleadingRectangle = SFSymbol(rawValue: "inset.filled.bottomleading.rectangle")

    /// 􁁳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomleadingRectanglePortrait = SFSymbol(rawValue: "inset.filled.bottomleading.rectangle.portrait")

    /// 􀭵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomleftRectangle = SFSymbol(rawValue: "inset.filled.bottomleft.rectangle")

    /// 􀾃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomleftRectanglePortrait = SFSymbol(rawValue: "inset.filled.bottomleft.rectangle.portrait")

    /// 􀭶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomrightRectangle = SFSymbol(rawValue: "inset.filled.bottomright.rectangle")

    /// 􀾂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomrightRectanglePortrait = SFSymbol(rawValue: "inset.filled.bottomright.rectangle.portrait")

    /// 􀨨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomthirdRectangle = SFSymbol(rawValue: "inset.filled.bottomthird.rectangle")

    /// 􀽾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomthirdRectanglePortrait = SFSymbol(rawValue: "inset.filled.bottomthird.rectangle.portrait")

    /// 􁒡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomthirdSquare = SFSymbol(rawValue: "inset.filled.bottomthird.square")

    /// 􁁬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomtrailingRectangle = SFSymbol(rawValue: "inset.filled.bottomtrailing.rectangle")

    /// 􁁴
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledBottomtrailingRectanglePortrait = SFSymbol(rawValue: "inset.filled.bottomtrailing.rectangle.portrait")

    /// 􀾚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledCapsule = SFSymbol(rawValue: "inset.filled.capsule")

    /// 􀾛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledCapsulePortrait = SFSymbol(rawValue: "inset.filled.capsule.portrait")

    /// 􀥝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledCenterRectangle = SFSymbol(rawValue: "inset.filled.center.rectangle")

    /// 􁈔
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let insetFilledCenterRectangleBadgePlus = SFSymbol(rawValue: "inset.filled.center.rectangle.badge.plus")

    /// 􀽿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledCenterRectanglePortrait = SFSymbol(rawValue: "inset.filled.center.rectangle.portrait")

    /// 􀝜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledCircle = SFSymbol(rawValue: "inset.filled.circle")

    /// 􀧒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledCircleDashed = SFSymbol(rawValue: "inset.filled.circle.dashed")

    /// 􀾗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledDiamond = SFSymbol(rawValue: "inset.filled.diamond")

    /// 􁁥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeadinghalfArrowLeadingRectangle = SFSymbol(rawValue: "inset.filled.leadinghalf.arrow.leading.rectangle")

    /// 􁁣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeadinghalfRectangle = SFSymbol(rawValue: "inset.filled.leadinghalf.rectangle")

    /// 􁁭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeadinghalfRectanglePortrait = SFSymbol(rawValue: "inset.filled.leadinghalf.rectangle.portrait")

    /// 􂨜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeadinghalfToptrailingBottomtrailingRectangle = SFSymbol(rawValue: "inset.filled.leadinghalf.toptrailing.bottomtrailing.rectangle")

    /// 􂬓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeadinghalfTrailinghalfRectangle = SFSymbol(rawValue: "inset.filled.leadinghalf.trailinghalf.rectangle")

    /// 􁁧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeadingthirdRectangle = SFSymbol(rawValue: "inset.filled.leadingthird.rectangle")

    /// 􁁯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeadingthirdRectanglePortrait = SFSymbol(rawValue: "inset.filled.leadingthird.rectangle.portrait")

    /// 􁒤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeadingthirdSquare = SFSymbol(rawValue: "inset.filled.leadingthird.square")

    /// 􀥞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLefthalfArrowLeftRectangle = SFSymbol(rawValue: "inset.filled.lefthalf.arrow.left.rectangle")

    /// 􀤴
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLefthalfRectangle = SFSymbol(rawValue: "inset.filled.lefthalf.rectangle")

    /// 􀾄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLefthalfRectanglePortrait = SFSymbol(rawValue: "inset.filled.lefthalf.rectangle.portrait")

    /// 􂧬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLefthalfRighthalfRectangle = SFSymbol(rawValue: "inset.filled.lefthalf.righthalf.rectangle")

    /// 􂧮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLefthalfToprightBottomrightRectangle = SFSymbol(rawValue: "inset.filled.lefthalf.topright.bottomright.rectangle")

    /// 􀨱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeftthirdRectangle = SFSymbol(rawValue: "inset.filled.leftthird.rectangle")

    /// 􀽼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeftthirdRectanglePortrait = SFSymbol(rawValue: "inset.filled.leftthird.rectangle.portrait")

    /// 􁒢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledLeftthirdSquare = SFSymbol(rawValue: "inset.filled.leftthird.square")

    /// 􀾜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledOval = SFSymbol(rawValue: "inset.filled.oval")

    /// 􀾝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledOvalPortrait = SFSymbol(rawValue: "inset.filled.oval.portrait")

    /// 􀤳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRectangle = SFSymbol(rawValue: "inset.filled.rectangle")

    /// 􂇕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRectangleAndCursorarrow = SFSymbol(rawValue: "inset.filled.rectangle.and.cursorarrow")

    /// 􁅀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRectangleAndPersonFilled = SFSymbol(rawValue: "inset.filled.rectangle.and.person.filled")

    /// 􂃕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRectangleBadgeRecord = SFSymbol(rawValue: "inset.filled.rectangle.badge.record")

    /// 􀶣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRectangleOnRectangle = SFSymbol(rawValue: "inset.filled.rectangle.on.rectangle")

    /// 􀽸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRectanglePortrait = SFSymbol(rawValue: "inset.filled.rectangle.portrait")

    /// 􀥟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRighthalfArrowRightRectangle = SFSymbol(rawValue: "inset.filled.righthalf.arrow.right.rectangle")

    /// 􂬑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRighthalfLefthalfRectangle = SFSymbol(rawValue: "inset.filled.righthalf.lefthalf.rectangle")

    /// 􀤵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRighthalfRectangle = SFSymbol(rawValue: "inset.filled.righthalf.rectangle")

    /// 􀾅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRighthalfRectanglePortrait = SFSymbol(rawValue: "inset.filled.righthalf.rectangle.portrait")

    /// 􀨩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRightthirdRectangle = SFSymbol(rawValue: "inset.filled.rightthird.rectangle")

    /// 􀽻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRightthirdRectanglePortrait = SFSymbol(rawValue: "inset.filled.rightthird.rectangle.portrait")

    /// 􁒣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledRightthirdSquare = SFSymbol(rawValue: "inset.filled.rightthird.square")

    /// 􀾘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledSquare = SFSymbol(rawValue: "inset.filled.square")

    /// 􀧑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledSquareDashed = SFSymbol(rawValue: "inset.filled.square.dashed")

    /// 􂧭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTophalfBottomhalfRectangle = SFSymbol(rawValue: "inset.filled.tophalf.bottomhalf.rectangle")

    /// 􂧯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTophalfBottomleftBottomrightRectangle = SFSymbol(rawValue: "inset.filled.tophalf.bottomleft.bottomright.rectangle")

    /// 􀾮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTophalfRectangle = SFSymbol(rawValue: "inset.filled.tophalf.rectangle")

    /// 􀽹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTophalfRectanglePortrait = SFSymbol(rawValue: "inset.filled.tophalf.rectangle.portrait")

    /// 􂬐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopleadingBottomleadingTrailinghalfRectangle = SFSymbol(rawValue: "inset.filled.topleading.bottomleading.trailinghalf.rectangle")

    /// 􁁩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopleadingRectangle = SFSymbol(rawValue: "inset.filled.topleading.rectangle")

    /// 􁁱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopleadingRectanglePortrait = SFSymbol(rawValue: "inset.filled.topleading.rectangle.portrait")

    /// 􂬏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopleftBottomleftRighthalfRectangle = SFSymbol(rawValue: "inset.filled.topleft.bottomleft.righthalf.rectangle")

    /// 􀭳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopleftRectangle = SFSymbol(rawValue: "inset.filled.topleft.rectangle")

    /// 􀾀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopleftRectanglePortrait = SFSymbol(rawValue: "inset.filled.topleft.rectangle.portrait")

    /// 􂬗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopleftToprightBottomhalfRectangle = SFSymbol(rawValue: "inset.filled.topleft.topright.bottomhalf.rectangle")

    /// 􂧰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopleftToprightBottomleftBottomrightRectangle = SFSymbol(rawValue: "inset.filled.topleft.topright.bottomleft.bottomright.rectangle")

    /// 􀭴
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledToprightRectangle = SFSymbol(rawValue: "inset.filled.topright.rectangle")

    /// 􀾁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledToprightRectanglePortrait = SFSymbol(rawValue: "inset.filled.topright.rectangle.portrait")

    /// 􀴊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopthirdRectangle = SFSymbol(rawValue: "inset.filled.topthird.rectangle")

    /// 􀽽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopthirdRectanglePortrait = SFSymbol(rawValue: "inset.filled.topthird.rectangle.portrait")

    /// 􁒠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTopthirdSquare = SFSymbol(rawValue: "inset.filled.topthird.square")

    /// 􁁪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledToptrailingRectangle = SFSymbol(rawValue: "inset.filled.toptrailing.rectangle")

    /// 􁁲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledToptrailingRectanglePortrait = SFSymbol(rawValue: "inset.filled.toptrailing.rectangle.portrait")

    /// 􁁦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTrailinghalfArrowTrailingRectangle = SFSymbol(rawValue: "inset.filled.trailinghalf.arrow.trailing.rectangle")

    /// 􂬒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTrailinghalfLeadinghalfRectangle = SFSymbol(rawValue: "inset.filled.trailinghalf.leadinghalf.rectangle")

    /// 􁁤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTrailinghalfRectangle = SFSymbol(rawValue: "inset.filled.trailinghalf.rectangle")

    /// 􁁮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTrailinghalfRectanglePortrait = SFSymbol(rawValue: "inset.filled.trailinghalf.rectangle.portrait")

    /// 􁁨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTrailingthirdRectangle = SFSymbol(rawValue: "inset.filled.trailingthird.rectangle")

    /// 􁁰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTrailingthirdRectanglePortrait = SFSymbol(rawValue: "inset.filled.trailingthird.rectangle.portrait")

    /// 􁒥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTrailingthirdSquare = SFSymbol(rawValue: "inset.filled.trailingthird.square")

    /// 􀾙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTriangle = SFSymbol(rawValue: "inset.filled.triangle")

    /// 􀷘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let insetFilledTv = SFSymbol(rawValue: "inset.filled.tv")

    /// 􂝺
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadBadgeLocation = SFSymbol(rawValue: "ipad.badge.location")

    /// 􂝲
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen1BadgeLocation = SFSymbol(rawValue: "ipad.gen1.badge.location")

    /// 􂝴
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen1LandscapeBadgeLocation = SFSymbol(rawValue: "ipad.gen1.landscape.badge.location")

    /// 􂲖
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen1LandscapeSlash = SFSymbol(rawValue: "ipad.gen1.landscape.slash")

    /// 􂲔
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen1Slash = SFSymbol(rawValue: "ipad.gen1.slash")

    /// 􂝶
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen2BadgeLocation = SFSymbol(rawValue: "ipad.gen2.badge.location")

    /// 􂝸
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen2LandscapeBadgeLocation = SFSymbol(rawValue: "ipad.gen2.landscape.badge.location")

    /// 􂲚
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen2LandscapeSlash = SFSymbol(rawValue: "ipad.gen2.landscape.slash")

    /// 􂲘
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen2Slash = SFSymbol(rawValue: "ipad.gen2.slash")

    /// 􁄟
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad and iPhone.
    static let ipadLandscapeAndIphone = SFSymbol(rawValue: "ipad.landscape.and.iphone")

    /// 􁋟
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad and iPhone.
    static let ipadLandscapeAndIphoneSlash = SFSymbol(rawValue: "ipad.landscape.and.iphone.slash")

    /// 􂝼
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadLandscapeBadgeLocation = SFSymbol(rawValue: "ipad.landscape.badge.location")

    /// 􀶼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let iphoneAndArrowForwardInward = SFSymbol(rawValue: "iphone.and.arrow.forward.inward")

    /// 􂎽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let iphoneAndArrowForwardOutward = SFSymbol(rawValue: "iphone.and.arrow.forward.outward")

    /// 􁰿
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneAndArrowLeftAndArrowRightInward = SFSymbol(rawValue: "iphone.and.arrow.left.and.arrow.right.inward")

    /// 􂏹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let iphoneAndArrowRightInward = SFSymbol(rawValue: "iphone.and.arrow.right.inward")

    /// 􂏻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let iphoneAndArrowRightOutward = SFSymbol(rawValue: "iphone.and.arrow.right.outward")

    /// 􂤹
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneAppSwitcher = SFSymbol(rawValue: "iphone.app.switcher")

    /// 􂜸
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneBadgeLocation = SFSymbol(rawValue: "iphone.badge.location")

    /// 􂙔
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneCropCircle = SFSymbol(rawValue: "iphone.crop.circle")

    /// 􂈉
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to accessories and software that are compatible with the DockKit API.
    static let iphoneDockMotorizedViewfinder = SFSymbol(rawValue: "iphone.dock.motorized.viewfinder")

    /// 􂘨
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1AndArrowLeft = SFSymbol(rawValue: "iphone.gen1.and.arrow.left")

    /// 􂝰
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1BadgeLocation = SFSymbol(rawValue: "iphone.gen1.badge.location")

    /// 􂙑
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1CropCircle = SFSymbol(rawValue: "iphone.gen1.crop.circle")

    /// 􂲒
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1LandscapeSlash = SFSymbol(rawValue: "iphone.gen1.landscape.slash")

    /// 􂘢
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1Motion = SFSymbol(rawValue: "iphone.gen1.motion")

    /// 􂘩
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2AndArrowLeftAndArrowRightInward = SFSymbol(rawValue: "iphone.gen2.and.arrow.left.and.arrow.right.inward")

    /// 􂝮
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2BadgeLocation = SFSymbol(rawValue: "iphone.gen2.badge.location")

    /// 􂙒
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2CropCircle = SFSymbol(rawValue: "iphone.gen2.crop.circle")

    /// 􂲎
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2LandscapeSlash = SFSymbol(rawValue: "iphone.gen2.landscape.slash")

    /// 􂘤
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2Motion = SFSymbol(rawValue: "iphone.gen2.motion")

    /// 􂘪
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3AndArrowLeftAndArrowRightInward = SFSymbol(rawValue: "iphone.gen3.and.arrow.left.and.arrow.right.inward")

    /// 􂝬
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3BadgeLocation = SFSymbol(rawValue: "iphone.gen3.badge.location")

    /// 􂙓
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3CropCircle = SFSymbol(rawValue: "iphone.gen3.crop.circle")

    /// 􂲐
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3LandscapeSlash = SFSymbol(rawValue: "iphone.gen3.landscape.slash")

    /// 􂘦
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3Motion = SFSymbol(rawValue: "iphone.gen3.motion")

    /// 􂘒
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneMotion = SFSymbol(rawValue: "iphone.motion")

    /// 􀫨
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPod shuffle.
    static let ipodShuffleGen1 = SFSymbol(rawValue: "ipod.shuffle.gen1")

    /// 􀫩
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPod shuffle.
    static let ipodShuffleGen2 = SFSymbol(rawValue: "ipod.shuffle.gen2")

    /// 􀫪
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPod shuffle.
    static let ipodShuffleGen3 = SFSymbol(rawValue: "ipod.shuffle.gen3")

    /// 􀫫
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPod shuffle.
    static let ipodShuffleGen4 = SFSymbol(rawValue: "ipod.shuffle.gen4")

    /// 􀫧
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPod touch.
    static let ipodTouch = SFSymbol(rawValue: "ipod.touch")

    /// 􀴐
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPod touch.
    static let ipodTouchLandscape = SFSymbol(rawValue: "ipod.touch.landscape")

    /// 􁂲
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPod touch.
    static let ipodTouchSlash = SFSymbol(rawValue: "ipod.touch.slash")

    /// 􂏬
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let jacket = SFSymbol(rawValue: "jacket")

    /// 􂏭
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let jacketFill = SFSymbol(rawValue: "jacket.fill")

    /// 􂏪
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let key2OnRing = SFSymbol(rawValue: "key.2.on.ring")

    /// 􂏫
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let key2OnRingFill = SFSymbol(rawValue: "key.2.on.ring.fill")

    /// 􂬲
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let keyCarRadiowavesForward = SymbolWith1Localization<Rtl>(rawValue: "key.car.radiowaves.forward")

    /// 􂬳
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let keyCarRadiowavesForwardFill = SymbolWith1Localization<Rtl>(rawValue: "key.car.radiowaves.forward.fill")

    /// 􂬠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let keyCard = SFSymbol(rawValue: "key.card")

    /// 􂬡
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let keyCardFill = SFSymbol(rawValue: "key.card.fill")

    /// 􂈠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let kipsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "kipsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let kipsignBankBuilding = SFSymbol(rawValue: "kipsign.bank.building")

    /// 􂔘
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let kipsignBankBuildingFill = SFSymbol(rawValue: "kipsign.bank.building.fill")

    /// 􂩎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let kipsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "kipsign.gauge.chart.lefthalf.righthalf")

    /// 􂩸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let kipsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "kipsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let kipsignRing = SFSymbol(rawValue: "kipsign.ring")

    /// 􂯴
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let kipsignRingDashed = SFSymbol(rawValue: "kipsign.ring.dashed")

    /// 􂟦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let ladybugSlash = SFSymbol(rawValue: "ladybug.slash")

    /// 􂟪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let ladybugSlashCircle = SFSymbol(rawValue: "ladybug.slash.circle")

    /// 􂟬
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let ladybugSlashCircleFill = SFSymbol(rawValue: "ladybug.slash.circle.fill")

    /// 􂟨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let ladybugSlashFill = SFSymbol(rawValue: "ladybug.slash.fill")

    /// 􂈰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let larisignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "larisign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let larisignBankBuilding = SFSymbol(rawValue: "larisign.bank.building")

    /// 􂔸
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let larisignBankBuildingFill = SFSymbol(rawValue: "larisign.bank.building.fill")

    /// 􂩏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let larisignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "larisign.gauge.chart.lefthalf.righthalf")

    /// 􂩹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let larisignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "larisign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let larisignRing = SFSymbol(rawValue: "larisign.ring")

    /// 􂯵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let larisignRingDashed = SFSymbol(rawValue: "larisign.ring.dashed")

    /// 􀙜
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let leafArrowTriangleheadClockwise = SFSymbol(rawValue: "leaf.arrow.trianglehead.clockwise")

    /// 􂪰
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let lessthanorequalto = SFSymbol(rawValue: "lessthanorequalto")

    /// 􂫇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lessthanorequaltoCircle = SFSymbol(rawValue: "lessthanorequalto.circle")

    /// 􂫈
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let lessthanorequaltoCircleFill = SFSymbol(rawValue: "lessthanorequalto.circle.fill")

    /// 􂫉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lessthanorequaltoSquare = SFSymbol(rawValue: "lessthanorequalto.square")

    /// 􂫊
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let lessthanorequaltoSquareFill = SFSymbol(rawValue: "lessthanorequalto.square.fill")

    /// 􂈢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lirasignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "lirasign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lirasignBankBuilding = SFSymbol(rawValue: "lirasign.bank.building")

    /// 􂔜
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let lirasignBankBuildingFill = SFSymbol(rawValue: "lirasign.bank.building.fill")

    /// 􂩐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lirasignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "lirasign.gauge.chart.lefthalf.righthalf")

    /// 􂩺
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lirasignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "lirasign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lirasignRing = SFSymbol(rawValue: "lirasign.ring")

    /// 􂯶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lirasignRingDashed = SFSymbol(rawValue: "lirasign.ring.dashed")

    /// 􂜰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let locationApp = SFSymbol(rawValue: "location.app")

    /// 􂜱
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let locationAppFill = SFSymbol(rawValue: "location.app.fill")

    /// 􀢍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lockDocument = SFSymbol(rawValue: "lock.document")

    /// 􀢎
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let lockDocumentFill = SFSymbol(rawValue: "lock.document.fill")

    /// 􂠘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lockRectangleOnRectangleDashed = SFSymbol(rawValue: "lock.rectangle.on.rectangle.dashed")

    /// 􂭶
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s MacBook and Apple Watch.
    static let macbookAndApplewatch = SFSymbol(rawValue: "macbook.and.applewatch")

    /// 􁜙
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro and MacBook.
    static let macbookAndVisionPro = SFSymbol(rawValue: "macbook.and.vision.pro")

    /// 􂲌
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s MacBook.
    static let macbookSlash = SFSymbol(rawValue: "macbook.slash")

    /// 􂣪
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let malaysianringgitsign = SFSymbol(rawValue: "malaysianringgitsign")

    /// 􂣱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let malaysianringgitsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "malaysianringgitsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂣯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let malaysianringgitsignBankBuilding = SFSymbol(rawValue: "malaysianringgitsign.bank.building")

    /// 􂣰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let malaysianringgitsignBankBuildingFill = SFSymbol(rawValue: "malaysianringgitsign.bank.building.fill")

    /// 􂣫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let malaysianringgitsignCircle = SFSymbol(rawValue: "malaysianringgitsign.circle")

    /// 􂣬
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let malaysianringgitsignCircleFill = SFSymbol(rawValue: "malaysianringgitsign.circle.fill")

    /// 􂩒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let malaysianringgitsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "malaysianringgitsign.gauge.chart.lefthalf.righthalf")

    /// 􂩼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let malaysianringgitsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "malaysianringgitsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let malaysianringgitsignRing = SFSymbol(rawValue: "malaysianringgitsign.ring")

    /// 􂯸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let malaysianringgitsignRingDashed = SFSymbol(rawValue: "malaysianringgitsign.ring.dashed")

    /// 􂣭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let malaysianringgitsignSquare = SFSymbol(rawValue: "malaysianringgitsign.square")

    /// 􂣮
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let malaysianringgitsignSquareFill = SFSymbol(rawValue: "malaysianringgitsign.square.fill")

    /// 􂈭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let manatsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "manatsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let manatsignBankBuilding = SFSymbol(rawValue: "manatsign.bank.building")

    /// 􂔲
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let manatsignBankBuildingFill = SFSymbol(rawValue: "manatsign.bank.building.fill")

    /// 􂩑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let manatsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "manatsign.gauge.chart.lefthalf.righthalf")

    /// 􂩻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let manatsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "manatsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let manatsignRing = SFSymbol(rawValue: "manatsign.ring")

    /// 􂯷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let manatsignRingDashed = SFSymbol(rawValue: "manatsign.ring.dashed")

    /// 􀴗
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to the Connectivity Standards Alliance Matter connectivity protocol.
    static let matterLogo = SFSymbol(rawValue: "matter.logo")

    /// 􂥮
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let mecca = SFSymbol(rawValue: "mecca")

    /// 􀊰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor
    static let microphone = SFSymbol(rawValue: "microphone")

    /// 􁎔
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneAndSignalMeter = SFSymbol(rawValue: "microphone.and.signal.meter")

    /// 􁎓
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneAndSignalMeterFill = SFSymbol(rawValue: "microphone.and.signal.meter.fill")

    /// 􂙍
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneBadgeEllipsis = SFSymbol(rawValue: "microphone.badge.ellipsis")

    /// 􂙎
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneBadgeEllipsisFill = SFSymbol(rawValue: "microphone.badge.ellipsis.fill")

    /// 􀺁
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneBadgePlus = SFSymbol(rawValue: "microphone.badge.plus")

    /// 􀺂
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneBadgePlusFill = SFSymbol(rawValue: "microphone.badge.plus.fill")

    /// 􁙃
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneBadgeXmark = SFSymbol(rawValue: "microphone.badge.xmark")

    /// 􁙄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneBadgeXmarkFill = SFSymbol(rawValue: "microphone.badge.xmark.fill")

    /// 􀒩
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneCircle = SFSymbol(rawValue: "microphone.circle")

    /// 􀒪
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneCircleFill = SFSymbol(rawValue: "microphone.circle.fill")

    /// 􀊱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor
    static let microphoneFill = SFSymbol(rawValue: "microphone.fill")

    /// 􀊲
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneSlash = SFSymbol(rawValue: "microphone.slash")

    /// 􀻩
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneSlashCircle = SFSymbol(rawValue: "microphone.slash.circle")

    /// 􀻪
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneSlashCircleFill = SFSymbol(rawValue: "microphone.slash.circle.fill")

    /// 􀊳
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneSlashFill = SFSymbol(rawValue: "microphone.slash.fill")

    /// 􀼿
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneSquare = SFSymbol(rawValue: "microphone.square")

    /// 􀽀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let microphoneSquareFill = SFSymbol(rawValue: "microphone.square.fill")

    /// 􂈫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let millsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "millsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let millsignBankBuilding = SFSymbol(rawValue: "millsign.bank.building")

    /// 􂔮
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let millsignBankBuildingFill = SFSymbol(rawValue: "millsign.bank.building.fill")

    /// 􂩓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let millsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "millsign.gauge.chart.lefthalf.righthalf")

    /// 􂩽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let millsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "millsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let millsignRing = SFSymbol(rawValue: "millsign.ring")

    /// 􂯹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let millsignRingDashed = SFSymbol(rawValue: "millsign.ring.dashed")

    /// 􀘩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let minusArrowTriangleheadCounterclockwise = SFSymbol(rawValue: "minus.arrow.trianglehead.counterclockwise")

    /// 􂣸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let moonRoadLanes = SFSymbol(rawValue: "moon.road.lanes")

    /// 􂏮
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let moped = SFSymbol(rawValue: "moped")

    /// 􂏯
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let mopedFill = SFSymbol(rawValue: "moped.fill")

    /// 􂓴
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let motorcycle = SFSymbol(rawValue: "motorcycle")

    /// 􂓵
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let motorcycleFill = SFSymbol(rawValue: "motorcycle.fill")

    /// 􀑫
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let musicMicrophone = SFSymbol(rawValue: "music.microphone")

    /// 􁁑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let musicMicrophoneCircle = SFSymbol(rawValue: "music.microphone.circle")

    /// 􁁒
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let musicMicrophoneCircleFill = SFSymbol(rawValue: "music.microphone.circle.fill")

    /// 􂈥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let nairasignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "nairasign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let nairasignBankBuilding = SFSymbol(rawValue: "nairasign.bank.building")

    /// 􂔢
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let nairasignBankBuildingFill = SFSymbol(rawValue: "nairasign.bank.building.fill")

    /// 􂩔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let nairasignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "nairasign.gauge.chart.lefthalf.righthalf")

    /// 􂩾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let nairasignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "nairasign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let nairasignRing = SFSymbol(rawValue: "nairasign.ring")

    /// 􂯺
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let nairasignRingDashed = SFSymbol(rawValue: "nairasign.ring.dashed")

    /// 􂈵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let norwegiankronesignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "norwegiankronesign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂕁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let norwegiankronesignBankBuilding = SFSymbol(rawValue: "norwegiankronesign.bank.building")

    /// 􂕂
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let norwegiankronesignBankBuildingFill = SFSymbol(rawValue: "norwegiankronesign.bank.building.fill")

    /// 􂩕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let norwegiankronesignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "norwegiankronesign.gauge.chart.lefthalf.righthalf")

    /// 􂩿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let norwegiankronesignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "norwegiankronesign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let norwegiankronesignRing = SFSymbol(rawValue: "norwegiankronesign.ring")

    /// 􂯻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let norwegiankronesignRingDashed = SFSymbol(rawValue: "norwegiankronesign.ring.dashed")

    /// 􂪯
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let notequal = SFSymbol(rawValue: "notequal")

    /// 􂫃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let notequalCircle = SFSymbol(rawValue: "notequal.circle")

    /// 􂫄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let notequalCircleFill = SFSymbol(rawValue: "notequal.circle.fill")

    /// 􂫅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let notequalSquare = SFSymbol(rawValue: "notequal.square")

    /// 􂫆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let notequalSquareFill = SFSymbol(rawValue: "notequal.square.fill")

    /// 􀅱
    /// 3 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    static let numbers = SymbolWith2Localizations<Ar, Hi>(rawValue: "numbers")

    /// 􁂷
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let numbersRectangle = SymbolWith2Localizations<Ar, Hi>(rawValue: "numbers.rectangle")

    /// 􁂸
    /// 3 Localizations, 3 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let numbersRectangleFill = SymbolWith2Localizations<Ar, Hi>(rawValue: "numbers.rectangle.fill")

    /// 􂕳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let oar2CrossedCircle = SFSymbol(rawValue: "oar.2.crossed.circle")

    /// 􂕴
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let oar2CrossedCircleFill = SFSymbol(rawValue: "oar.2.crossed.circle.fill")

    /// 􂞎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let oilcanAndThermometer = SFSymbol(rawValue: "oilcan.and.thermometer")

    /// 􂞐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let oilcanAndThermometerFill = SFSymbol(rawValue: "oilcan.and.thermometer.fill")

    /// 􂊸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let parkingsignRadiowavesDownRightOff = SFSymbol(rawValue: "parkingsign.radiowaves.down.right.off")

    /// 􂊳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let parkingsignRadiowavesLeftAndRightSlash = SFSymbol(rawValue: "parkingsign.radiowaves.left.and.right.slash")

    /// 􂨈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let parkingsignSquare = SFSymbol(rawValue: "parkingsign.square")

    /// 􂨉
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let parkingsignSquareFill = SFSymbol(rawValue: "parkingsign.square.fill")

    /// 􁙙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let person2ArrowTriangleheadCounterclockwise = SFSymbol(rawValue: "person.2.arrow.trianglehead.counterclockwise")

    /// 􂪡
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let person2BadgeMinus = SFSymbol(rawValue: "person.2.badge.minus")

    /// 􂪢
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let person2BadgeMinusFill = SFSymbol(rawValue: "person.2.badge.minus.fill")

    /// 􂪝
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let person2BadgePlus = SFSymbol(rawValue: "person.2.badge.plus")

    /// 􂪞
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let person2BadgePlusFill = SFSymbol(rawValue: "person.2.badge.plus.fill")

    /// 􀪼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let personAndArrowLeftAndArrowRightOutward = SFSymbol(rawValue: "person.and.arrow.left.and.arrow.right.outward")

    /// 􂧻
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let personBadgeShieldExclamationmark = SFSymbol(rawValue: "person.badge.shield.exclamationmark")

    /// 􂧼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let personBadgeShieldExclamationmarkFill = SFSymbol(rawValue: "person.badge.shield.exclamationmark.fill")

    /// 􁹕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let personCropBadgeMagnifyingglass = SFSymbol(rawValue: "person.crop.badge.magnifyingglass")

    /// 􁹖
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let personCropBadgeMagnifyingglassFill = SFSymbol(rawValue: "person.crop.badge.magnifyingglass.fill")

    /// 􂣄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let personCropSquareOnSquareAngled = SFSymbol(rawValue: "person.crop.square.on.square.angled")

    /// 􂣅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let personCropSquareOnSquareAngledFill = SFSymbol(rawValue: "person.crop.square.on.square.angled.fill")

    /// 􀪽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let personFillAndArrowLeftAndArrowRightOutward = SFSymbol(rawValue: "person.fill.and.arrow.left.and.arrow.right.outward")

    /// 􂮿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let personalhotspotSlash = SFSymbol(rawValue: "personalhotspot.slash")

    /// 􂨴
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let peruviansolessign = SFSymbol(rawValue: "peruviansolessign")

    /// 􂥯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let peruviansolessignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "peruviansolessign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂨹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let peruviansolessignBankBuilding = SFSymbol(rawValue: "peruviansolessign.bank.building")

    /// 􂨺
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let peruviansolessignBankBuildingFill = SFSymbol(rawValue: "peruviansolessign.bank.building.fill")

    /// 􂨵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let peruviansolessignCircle = SFSymbol(rawValue: "peruviansolessign.circle")

    /// 􂨶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let peruviansolessignCircleFill = SFSymbol(rawValue: "peruviansolessign.circle.fill")

    /// 􂩖
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let peruviansolessignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "peruviansolessign.gauge.chart.lefthalf.righthalf")

    /// 􂪀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let peruviansolessignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "peruviansolessign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let peruviansolessignRing = SFSymbol(rawValue: "peruviansolessign.ring")

    /// 􂯼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let peruviansolessignRingDashed = SFSymbol(rawValue: "peruviansolessign.ring.dashed")

    /// 􂨷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let peruviansolessignSquare = SFSymbol(rawValue: "peruviansolessign.square")

    /// 􂨸
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let peruviansolessignSquareFill = SFSymbol(rawValue: "peruviansolessign.square.fill")

    /// 􂈞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesetasignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "pesetasign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesetasignBankBuilding = SFSymbol(rawValue: "pesetasign.bank.building")

    /// 􂔔
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let pesetasignBankBuildingFill = SFSymbol(rawValue: "pesetasign.bank.building.fill")

    /// 􂩗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesetasignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "pesetasign.gauge.chart.lefthalf.righthalf")

    /// 􂪁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesetasignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "pesetasign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesetasignRing = SFSymbol(rawValue: "pesetasign.ring")

    /// 􂯽
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesetasignRingDashed = SFSymbol(rawValue: "pesetasign.ring.dashed")

    /// 􂈟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesosignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "pesosign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesosignBankBuilding = SFSymbol(rawValue: "pesosign.bank.building")

    /// 􂔖
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let pesosignBankBuildingFill = SFSymbol(rawValue: "pesosign.bank.building.fill")

    /// 􂩘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesosignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "pesosign.gauge.chart.lefthalf.righthalf")

    /// 􂪂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesosignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "pesosign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesosignRing = SFSymbol(rawValue: "pesosign.ring")

    /// 􂯾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pesosignRingDashed = SFSymbol(rawValue: "pesosign.ring.dashed")

    /// 􂞲
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let phoneBadgeClock = SFSymbol(rawValue: "phone.badge.clock")

    /// 􂞳
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let phoneBadgeClockFill = SFSymbol(rawValue: "phone.badge.clock.fill")

    /// 􂪥
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let photoBadgeExclamationmark = SFSymbol(rawValue: "photo.badge.exclamationmark")

    /// 􂪦
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let photoBadgeExclamationmarkFill = SFSymbol(rawValue: "photo.badge.exclamationmark.fill")

    /// 􂣳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let photoOnRectangleAngledFill = SFSymbol(rawValue: "photo.on.rectangle.angled.fill")

    /// 􀘨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let plusArrowTriangleheadClockwise = SFSymbol(rawValue: "plus.arrow.trianglehead.clockwise")

    /// 􂤜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pointBottomleftForwardToArrowTriangleScurvepath = SFSymbol(rawValue: "point.bottomleft.forward.to.arrow.triangle.scurvepath")

    /// 􂤝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pointBottomleftForwardToArrowTriangleScurvepathFill = SFSymbol(rawValue: "point.bottomleft.forward.to.arrow.triangle.scurvepath.fill")

    /// 􁻷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pointBottomleftForwardToArrowTriangleUturnScurvepath = SFSymbol(rawValue: "point.bottomleft.forward.to.arrow.triangle.uturn.scurvepath")

    /// 􁸹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pointBottomleftForwardToArrowTriangleUturnScurvepathFill = SFSymbol(rawValue: "point.bottomleft.forward.to.arrow.triangle.uturn.scurvepath.fill")

    /// 􂤛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pointToprightArrowTriangleBackwardToPointBottomleftFilledScurvepath = SFSymbol(rawValue: "point.topright.arrow.triangle.backward.to.point.bottomleft.filled.scurvepath")

    /// 􂤙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pointToprightArrowTriangleBackwardToPointBottomleftScurvepath = SFSymbol(rawValue: "point.topright.arrow.triangle.backward.to.point.bottomleft.scurvepath")

    /// 􂤚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pointToprightArrowTriangleBackwardToPointBottomleftScurvepathFill = SFSymbol(rawValue: "point.topright.arrow.triangle.backward.to.point.bottomleft.scurvepath.fill")

    /// 􂤞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let pointToprightFilledArrowTriangleBackwardToPointBottomleftScurvepath = SFSymbol(rawValue: "point.topright.filled.arrow.triangle.backward.to.point.bottomleft.scurvepath")

    /// 􂈴
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let polishzlotysignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "polishzlotysign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let polishzlotysignBankBuilding = SFSymbol(rawValue: "polishzlotysign.bank.building")

    /// 􂕀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let polishzlotysignBankBuildingFill = SFSymbol(rawValue: "polishzlotysign.bank.building.fill")

    /// 􂩙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let polishzlotysignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "polishzlotysign.gauge.chart.lefthalf.righthalf")

    /// 􂪃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let polishzlotysignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "polishzlotysign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let polishzlotysignRing = SFSymbol(rawValue: "polishzlotysign.ring")

    /// 􂯿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let polishzlotysignRingDashed = SFSymbol(rawValue: "polishzlotysign.ring.dashed")

    /// 􂚛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let powermeter = SFSymbol(rawValue: "powermeter")

    /// 􂬹
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let powerplugPortrait = SFSymbol(rawValue: "powerplug.portrait")

    /// 􂬺
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let powerplugPortraitFill = SFSymbol(rawValue: "powerplug.portrait.fill")

    /// 􁑲
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let printerDotmatrixFilledAndPaperInverse = SFSymbol(rawValue: "printer.dotmatrix.filled.and.paper.inverse")

    /// 􂨣
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let printerDotmatrixInverse = SFSymbol(rawValue: "printer.dotmatrix.inverse")

    /// 􁑱
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let printerFilledAndPaperInverse = SFSymbol(rawValue: "printer.filled.and.paper.inverse")

    /// 􂨖
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let printerInverse = SFSymbol(rawValue: "printer.inverse")

    /// 􀴽
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let progressIndicator = SFSymbol(rawValue: "progress.indicator")

    /// 􂞷
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let questionmarkCircleDashed = SymbolWith1Localization<Ar>(rawValue: "questionmark.circle.dashed")

    /// 􂇲
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Arabic
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor
    static let questionmarkTextPage = SymbolWith2Localizations<Ar, Rtl>(rawValue: "questionmark.text.page")

    /// 􂇳
    /// 3 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Arabic
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    static let questionmarkTextPageFill = SymbolWith2Localizations<Ar, Rtl>(rawValue: "questionmark.text.page.fill")

    /// 􂮨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rectangleExpandDiagonal = SFSymbol(rawValue: "rectangle.expand.diagonal")

    /// 􂫑
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let rectangleGrid3x3 = SFSymbol(rawValue: "rectangle.grid.3x3")

    /// 􂫒
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let rectangleGrid3x3Fill = SFSymbol(rawValue: "rectangle.grid.3x3.fill")

    /// 􂠗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rectangleOnRectangleDashed = SFSymbol(rawValue: "rectangle.on.rectangle.dashed")

    /// 􀪫
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let rectanglePatternCheckered = SFSymbol(rawValue: "rectangle.pattern.checkered")

    /// 􀉅
    /// 8 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    ///
    /// Layersets:
    /// - Monochrome
    static let richtextPage = SymbolWith7Localizations<Ar, He, Hi, Ja, Ko, Th, Zh>(rawValue: "richtext.page")

    /// 􀦊
    /// 8 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    ///
    /// Layersets:
    /// - Monochrome
    static let richtextPageFill = SymbolWith7Localizations<Ar, He, Hi, Ja, Ko, Th, Zh>(rawValue: "richtext.page.fill")

    /// 􂨭
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let roboticVacuum = SFSymbol(rawValue: "robotic.vacuum")

    /// 􂨮
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let roboticVacuumFill = SFSymbol(rawValue: "robotic.vacuum.fill")

    /// 􂈙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rublesignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "rublesign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rublesignBankBuilding = SFSymbol(rawValue: "rublesign.bank.building")

    /// 􂔊
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let rublesignBankBuildingFill = SFSymbol(rawValue: "rublesign.bank.building.fill")

    /// 􂩚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rublesignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "rublesign.gauge.chart.lefthalf.righthalf")

    /// 􂪄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rublesignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "rublesign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rublesignRing = SFSymbol(rawValue: "rublesign.ring")

    /// 􂰀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rublesignRingDashed = SFSymbol(rawValue: "rublesign.ring.dashed")

    /// 􂎹
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let rugbyball = SFSymbol(rawValue: "rugbyball")

    /// 􂎻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rugbyballCircle = SFSymbol(rawValue: "rugbyball.circle")

    /// 􂎼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let rugbyballCircleFill = SFSymbol(rawValue: "rugbyball.circle.fill")

    /// 􂎺
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let rugbyballFill = SFSymbol(rawValue: "rugbyball.fill")

    /// 􂈮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rupeesignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "rupeesign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rupeesignBankBuilding = SFSymbol(rawValue: "rupeesign.bank.building")

    /// 􂔴
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let rupeesignBankBuildingFill = SFSymbol(rawValue: "rupeesign.bank.building.fill")

    /// 􂩛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rupeesignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "rupeesign.gauge.chart.lefthalf.righthalf")

    /// 􂪅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rupeesignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "rupeesign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rupeesignRing = SFSymbol(rawValue: "rupeesign.ring")

    /// 􂰁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let rupeesignRingDashed = SFSymbol(rawValue: "rupeesign.ring.dashed")

    /// 􁅁
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s Shared With You feature.
    static let sharedwithyou = SFSymbol(rawValue: "sharedwithyou")

    /// 􂇄
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s Shared With You feature.
    static let sharedwithyouCircle = SFSymbol(rawValue: "sharedwithyou.circle")

    /// 􂄀
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s Shared With You feature.
    static let sharedwithyouCircleFill = SFSymbol(rawValue: "sharedwithyou.circle.fill")

    /// 􁇦
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s Shared With You feature.
    static let sharedwithyouSlash = SFSymbol(rawValue: "sharedwithyou.slash")

    /// 􂈬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let shekelsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "shekelsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let shekelsignBankBuilding = SFSymbol(rawValue: "shekelsign.bank.building")

    /// 􂔰
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let shekelsignBankBuildingFill = SFSymbol(rawValue: "shekelsign.bank.building.fill")

    /// 􂩜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let shekelsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "shekelsign.gauge.chart.lefthalf.righthalf")

    /// 􂪆
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let shekelsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "shekelsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let shekelsignRing = SFSymbol(rawValue: "shekelsign.ring")

    /// 􂰂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let shekelsignRingDashed = SFSymbol(rawValue: "shekelsign.ring.dashed")

    /// 􀵔
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let shieldPatternCheckered = SFSymbol(rawValue: "shield.pattern.checkered")

    /// 􂨰
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let singaporedollarsign = SFSymbol(rawValue: "singaporedollarsign")

    /// 􂨱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let singaporedollarsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "singaporedollarsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂨲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let singaporedollarsignBankBuilding = SFSymbol(rawValue: "singaporedollarsign.bank.building")

    /// 􂨳
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let singaporedollarsignBankBuildingFill = SFSymbol(rawValue: "singaporedollarsign.bank.building.fill")

    /// 􂉮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let singaporedollarsignCircle = SFSymbol(rawValue: "singaporedollarsign.circle")

    /// 􂉯
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let singaporedollarsignCircleFill = SFSymbol(rawValue: "singaporedollarsign.circle.fill")

    /// 􂩝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let singaporedollarsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "singaporedollarsign.gauge.chart.lefthalf.righthalf")

    /// 􂪇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let singaporedollarsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "singaporedollarsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let singaporedollarsignRing = SFSymbol(rawValue: "singaporedollarsign.ring")

    /// 􂰃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let singaporedollarsignRingDashed = SFSymbol(rawValue: "singaporedollarsign.ring.dashed")

    /// 􂉰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let singaporedollarsignSquare = SFSymbol(rawValue: "singaporedollarsign.square")

    /// 􂉱
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let singaporedollarsignSquareFill = SFSymbol(rawValue: "singaporedollarsign.square.fill")

    /// 􁚌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sliderHorizontal2ArrowTriangleheadCounterclockwise = SFSymbol(rawValue: "slider.horizontal.2.arrow.trianglehead.counterclockwise")

    /// 􁅊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sliderHorizontal2RectangleAndArrowTrianglehead2ClockwiseRotate90 = SFSymbol(rawValue: "slider.horizontal.2.rectangle.and.arrow.trianglehead.2.clockwise.rotate.90")

    /// 􂠻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let speakerWave1ArrowtrianglesUpRightDownLeft = SFSymbol(rawValue: "speaker.wave.1.arrowtriangles.up.right.down.left")

    /// 􂰵
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let squareAndArrowDownBadgeClock = SFSymbol(rawValue: "square.and.arrow.down.badge.clock")

    /// 􂰶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let squareAndArrowDownBadgeClockFill = SFSymbol(rawValue: "square.and.arrow.down.badge.clock.fill")

    /// 􂋑
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let squareAndArrowUpTrianglebadgeExclamationmarkFill = SFSymbol(rawValue: "square.and.arrow.up.trianglebadge.exclamationmark.fill")

    /// 􂠄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let squareGrid3x3SquareBadgeEllipsis = SFSymbol(rawValue: "square.grid.3x3.square.badge.ellipsis")

    /// 􂲯
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let squareroot = SFSymbol(rawValue: "squareroot")

    /// 􂏐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let steeringwheelAndHands = SFSymbol(rawValue: "steeringwheel.and.hands")

    /// 􂥡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let steeringwheelArrowTriangleheadCounterclockwiseAndClockwise = SFSymbol(rawValue: "steeringwheel.arrow.trianglehead.counterclockwise.and.clockwise")

    /// 􂈕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sterlingsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "sterlingsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sterlingsignBankBuilding = SFSymbol(rawValue: "sterlingsign.bank.building")

    /// 􂔂
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let sterlingsignBankBuildingFill = SFSymbol(rawValue: "sterlingsign.bank.building.fill")

    /// 􂩞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sterlingsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "sterlingsign.gauge.chart.lefthalf.righthalf")

    /// 􂪈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sterlingsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "sterlingsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sterlingsignRing = SFSymbol(rawValue: "sterlingsign.ring")

    /// 􂰄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sterlingsignRingDashed = SFSymbol(rawValue: "sterlingsign.ring.dashed")

    /// 􂱢
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let sunLefthalfFilled = SFSymbol(rawValue: "sun.lefthalf.filled")

    /// 􂱣
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let sunRighthalfFilled = SFSymbol(rawValue: "sun.righthalf.filled")

    /// 􂊯
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let suspensionShock = SFSymbol(rawValue: "suspension.shock")

    /// 􂞖
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let suvSideFrontOpenCrop = SFSymbol(rawValue: "suv.side.front.open.crop")

    /// 􂞗
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let suvSideFrontOpenCropFill = SFSymbol(rawValue: "suv.side.front.open.crop.fill")

    /// 􂊨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideHillDescentControl = SFSymbol(rawValue: "suv.side.hill.descent.control")

    /// 􂊩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideHillDescentControlFill = SFSymbol(rawValue: "suv.side.hill.descent.control.fill")

    /// 􂞘
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let suvSideRearOpenCrop = SFSymbol(rawValue: "suv.side.rear.open.crop")

    /// 􂞙
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let suvSideRearOpenCropFill = SFSymbol(rawValue: "suv.side.rear.open.crop.fill")

    /// 􂊢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideRoofCargoCarrier = SFSymbol(rawValue: "suv.side.roof.cargo.carrier")

    /// 􂊣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideRoofCargoCarrierFill = SFSymbol(rawValue: "suv.side.roof.cargo.carrier.fill")

    /// 􂙅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideRoofCargoCarrierSlash = SFSymbol(rawValue: "suv.side.roof.cargo.carrier.slash")

    /// 􂙇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideRoofCargoCarrierSlashFill = SFSymbol(rawValue: "suv.side.roof.cargo.carrier.slash.fill")

    /// 􂈶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let swedishkronasignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "swedishkronasign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂕃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let swedishkronasignBankBuilding = SFSymbol(rawValue: "swedishkronasign.bank.building")

    /// 􂕄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let swedishkronasignBankBuildingFill = SFSymbol(rawValue: "swedishkronasign.bank.building.fill")

    /// 􂩟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let swedishkronasignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "swedishkronasign.gauge.chart.lefthalf.righthalf")

    /// 􂪉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let swedishkronasignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "swedishkronasign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let swedishkronasignRing = SFSymbol(rawValue: "swedishkronasign.ring")

    /// 􂰅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let swedishkronasignRingDashed = SFSymbol(rawValue: "swedishkronasign.ring.dashed")

    /// 􂚚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tachometer = SFSymbol(rawValue: "tachometer")

    /// 􂈝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tengesignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "tengesign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tengesignBankBuilding = SFSymbol(rawValue: "tengesign.bank.building")

    /// 􂔒
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let tengesignBankBuildingFill = SFSymbol(rawValue: "tengesign.bank.building.fill")

    /// 􂩠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tengesignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "tengesign.gauge.chart.lefthalf.righthalf")

    /// 􂪊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tengesignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "tengesign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tengesignRing = SFSymbol(rawValue: "tengesign.ring")

    /// 􂰆
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tengesignRingDashed = SFSymbol(rawValue: "tengesign.ring.dashed")

    /// 􂱤
    /// 2 Localizations, 3 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let textBubbleBadgeClock = SymbolWith1Localization<Rtl>(rawValue: "text.bubble.badge.clock")

    /// 􂱥
    /// 2 Localizations, 3 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let textBubbleBadgeClockFill = SymbolWith1Localization<Rtl>(rawValue: "text.bubble.badge.clock.fill")

    /// 􀈿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor
    static let textDocument = SFSymbol(rawValue: "text.document")

    /// 􀉀
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textDocumentFill = SFSymbol(rawValue: "text.document.fill")

    /// 􂬁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let textLineMagnify = SFSymbol(rawValue: "text.line.magnify")

    /// 􀉆
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textPage = SFSymbol(rawValue: "text.page")

    /// 􀕹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let textPageBadgeMagnifyingglass = SFSymbol(rawValue: "text.page.badge.magnifyingglass")

    /// 􀥨
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textPageFill = SFSymbol(rawValue: "text.page.fill")

    /// 􂱑
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let textPageSlash = SymbolWith1Localization<Rtl>(rawValue: "text.page.slash")

    /// 􂱒
    /// 2 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Left-to-Right
    /// - Right-to-Left
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let textPageSlashFill = SymbolWith1Localization<Rtl>(rawValue: "text.page.slash.fill")

    /// 􀩽
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textRectanglePage = SFSymbol(rawValue: "text.rectangle.page")

    /// 􀩾
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textRectanglePageFill = SFSymbol(rawValue: "text.rectangle.page.fill")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatAltEl = SFSymbol(rawValue: "textformat.alt.el")

    /// 􀅯
    /// 8 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatCharacters = SymbolWith7Localizations<Ar, He, Hi, Ja, Ko, Th, Zh>(rawValue: "textformat.characters")

    /// 􂐭
    /// 7 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let textformatCharactersArrowLeftAndRight = SymbolWith6Localizations<He, Hi, Ja, Ko, Th, Zh>(rawValue: "textformat.characters.arrow.left.and.right")

    /// No preview available
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let textformatCharactersArrowLeftAndRightEl = SFSymbol(rawValue: "textformat.characters.arrow.left.and.right.el")

    /// No preview available
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let textformatCharactersArrowLeftAndRightRu = SFSymbol(rawValue: "textformat.characters.arrow.left.and.right.ru")

    /// 􀅰
    /// 8 Localizations, 3 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let textformatCharactersDottedunderline = SymbolWith7Localizations<Ar, He, Hi, Ja, Ko, Th, Zh>(rawValue: "textformat.characters.dottedunderline")

    /// No preview available
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let textformatCharactersDottedunderlineEl = SFSymbol(rawValue: "textformat.characters.dottedunderline.el")

    /// No preview available
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let textformatCharactersDottedunderlineRu = SFSymbol(rawValue: "textformat.characters.dottedunderline.ru")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatCharactersEl = SFSymbol(rawValue: "textformat.characters.el")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatCharactersRu = SFSymbol(rawValue: "textformat.characters.ru")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatEl = SFSymbol(rawValue: "textformat.el")

    /// 􁖻
    /// 5 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Burmese
    /// - Central Khmer
    /// - Hindi
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbers = SymbolWith4Localizations<Ar, Hi, Km, My>(rawValue: "textformat.numbers")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbersBn = SFSymbol(rawValue: "textformat.numbers.bn")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbersGu = SFSymbol(rawValue: "textformat.numbers.gu")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbersKn = SFSymbol(rawValue: "textformat.numbers.kn")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbersMl = SFSymbol(rawValue: "textformat.numbers.ml")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbersMni = SFSymbol(rawValue: "textformat.numbers.mni")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbersOr = SFSymbol(rawValue: "textformat.numbers.or")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbersPa = SFSymbol(rawValue: "textformat.numbers.pa")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbersSat = SFSymbol(rawValue: "textformat.numbers.sat")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatNumbersTe = SFSymbol(rawValue: "textformat.numbers.te")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeBn = SFSymbol(rawValue: "textformat.size.bn")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeGu = SFSymbol(rawValue: "textformat.size.gu")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeKn = SFSymbol(rawValue: "textformat.size.kn")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerBn = SFSymbol(rawValue: "textformat.size.larger.bn")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerGu = SFSymbol(rawValue: "textformat.size.larger.gu")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerKn = SFSymbol(rawValue: "textformat.size.larger.kn")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerMl = SFSymbol(rawValue: "textformat.size.larger.ml")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerMni = SFSymbol(rawValue: "textformat.size.larger.mni")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerMr = SFSymbol(rawValue: "textformat.size.larger.mr")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerOr = SFSymbol(rawValue: "textformat.size.larger.or")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerPa = SFSymbol(rawValue: "textformat.size.larger.pa")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerSat = SFSymbol(rawValue: "textformat.size.larger.sat")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerSi = SFSymbol(rawValue: "textformat.size.larger.si")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerTa = SFSymbol(rawValue: "textformat.size.larger.ta")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeLargerTe = SFSymbol(rawValue: "textformat.size.larger.te")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeMl = SFSymbol(rawValue: "textformat.size.ml")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeMni = SFSymbol(rawValue: "textformat.size.mni")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeMr = SFSymbol(rawValue: "textformat.size.mr")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeOr = SFSymbol(rawValue: "textformat.size.or")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizePa = SFSymbol(rawValue: "textformat.size.pa")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSat = SFSymbol(rawValue: "textformat.size.sat")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSi = SFSymbol(rawValue: "textformat.size.si")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerBn = SFSymbol(rawValue: "textformat.size.smaller.bn")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerGu = SFSymbol(rawValue: "textformat.size.smaller.gu")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerKn = SFSymbol(rawValue: "textformat.size.smaller.kn")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerMl = SFSymbol(rawValue: "textformat.size.smaller.ml")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerMni = SFSymbol(rawValue: "textformat.size.smaller.mni")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerMr = SFSymbol(rawValue: "textformat.size.smaller.mr")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerOr = SFSymbol(rawValue: "textformat.size.smaller.or")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerPa = SFSymbol(rawValue: "textformat.size.smaller.pa")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerSat = SFSymbol(rawValue: "textformat.size.smaller.sat")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerSi = SFSymbol(rawValue: "textformat.size.smaller.si")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerTa = SFSymbol(rawValue: "textformat.size.smaller.ta")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeSmallerTe = SFSymbol(rawValue: "textformat.size.smaller.te")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeTa = SFSymbol(rawValue: "textformat.size.ta")

    /// No preview available
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let textformatSizeTe = SFSymbol(rawValue: "textformat.size.te")

    /// 􂘔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let thermometerAndLiquidWavesSnowflake = SFSymbol(rawValue: "thermometer.and.liquid.waves.snowflake")

    /// 􂘖
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let thermometerAndLiquidWavesTrianglebadgeExclamationmark = SFSymbol(rawValue: "thermometer.and.liquid.waves.trianglebadge.exclamationmark")

    /// 􂬮
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let thermometerVariable = SFSymbol(rawValue: "thermometer.variable")

    /// 􂥰
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let tire = SFSymbol(rawValue: "tire")

    /// 􂥱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tireBadgeSnowflake = SFSymbol(rawValue: "tire.badge.snowflake")

    /// 􂊛
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let towHitch = SFSymbol(rawValue: "tow.hitch")

    /// 􂊝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let towHitchExclamationmark = SFSymbol(rawValue: "tow.hitch.exclamationmark")

    /// 􂊞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let towHitchExclamationmarkFill = SFSymbol(rawValue: "tow.hitch.exclamationmark.fill")

    /// 􂊜
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let towHitchFill = SFSymbol(rawValue: "tow.hitch.fill")

    /// 􂞚
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let truckPickupSideFrontOpenCrop = SFSymbol(rawValue: "truck.pickup.side.front.open.crop")

    /// 􂞛
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let truckPickupSideFrontOpenCropFill = SFSymbol(rawValue: "truck.pickup.side.front.open.crop.fill")

    /// 􂊪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let truckSideHillDescentControl = SFSymbol(rawValue: "truck.side.hill.descent.control")

    /// 􂊫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let truckSideHillDescentControlFill = SFSymbol(rawValue: "truck.side.hill.descent.control.fill")

    /// 􂊤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let truckSideRoofCargoCarrier = SFSymbol(rawValue: "truck.side.roof.cargo.carrier")

    /// 􂊥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let truckSideRoofCargoCarrierFill = SFSymbol(rawValue: "truck.side.roof.cargo.carrier.fill")

    /// 􂙉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let truckSideRoofCargoCarrierSlash = SFSymbol(rawValue: "truck.side.roof.cargo.carrier.slash")

    /// 􂙊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let truckSideRoofCargoCarrierSlashFill = SFSymbol(rawValue: "truck.side.roof.cargo.carrier.slash.fill")

    /// 􂮑
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let tsa = SFSymbol(rawValue: "tsa")

    /// 􂮟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tsaCircle = SFSymbol(rawValue: "tsa.circle")

    /// 􂮠
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let tsaCircleFill = SFSymbol(rawValue: "tsa.circle.fill")

    /// 􂮒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tsaSlash = SFSymbol(rawValue: "tsa.slash")

    /// 􂈪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tugriksignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "tugriksign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tugriksignBankBuilding = SFSymbol(rawValue: "tugriksign.bank.building")

    /// 􂔬
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let tugriksignBankBuildingFill = SFSymbol(rawValue: "tugriksign.bank.building.fill")

    /// 􂩡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tugriksignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "tugriksign.gauge.chart.lefthalf.righthalf")

    /// 􂪋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tugriksignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "tugriksign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tugriksignRing = SFSymbol(rawValue: "tugriksign.ring")

    /// 􂰇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tugriksignRingDashed = SFSymbol(rawValue: "tugriksign.ring.dashed")

    /// 􂈘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let turkishlirasignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "turkishlirasign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let turkishlirasignBankBuilding = SFSymbol(rawValue: "turkishlirasign.bank.building")

    /// 􂔈
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let turkishlirasignBankBuildingFill = SFSymbol(rawValue: "turkishlirasign.bank.building.fill")

    /// 􂩢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let turkishlirasignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "turkishlirasign.gauge.chart.lefthalf.righthalf")

    /// 􂪌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let turkishlirasignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "turkishlirasign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let turkishlirasignRing = SFSymbol(rawValue: "turkishlirasign.ring")

    /// 􂰈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let turkishlirasignRingDashed = SFSymbol(rawValue: "turkishlirasign.ring.dashed")

    /// 􁎖
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionPro = SFSymbol(rawValue: "vision.pro")

    /// 􁳔
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProAndArrowForward = SFSymbol(rawValue: "vision.pro.and.arrow.forward")

    /// 􁳕
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProAndArrowForwardFill = SFSymbol(rawValue: "vision.pro.and.arrow.forward.fill")

    /// 􁷇
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProBadgeExclamationmark = SFSymbol(rawValue: "vision.pro.badge.exclamationmark")

    /// 􁷈
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProBadgeExclamationmarkFill = SFSymbol(rawValue: "vision.pro.badge.exclamationmark.fill")

    /// 􁼿
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProBadgePlay = SFSymbol(rawValue: "vision.pro.badge.play")

    /// 􁽀
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProBadgePlayFill = SFSymbol(rawValue: "vision.pro.badge.play.fill")

    /// 􂅿
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProCircle = SFSymbol(rawValue: "vision.pro.circle")

    /// 􂆀
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProCircleFill = SFSymbol(rawValue: "vision.pro.circle.fill")

    /// 􁎘
    /// Single Localization, Single Layerset, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProFill = SFSymbol(rawValue: "vision.pro.fill")

    /// 􁽃
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProSlash = SFSymbol(rawValue: "vision.pro.slash")

    /// 􂆞
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProSlashCircle = SFSymbol(rawValue: "vision.pro.slash.circle")

    /// 􂆟
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProSlashCircleFill = SFSymbol(rawValue: "vision.pro.slash.circle.fill")

    /// 􁽄
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProSlashFill = SFSymbol(rawValue: "vision.pro.slash.fill")

    /// 􂓮
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProTrianglebadgeExclamationmark = SFSymbol(rawValue: "vision.pro.trianglebadge.exclamationmark")

    /// 􂓯
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Vision Pro.
    static let visionProTrianglebadgeExclamationmarkFill = SFSymbol(rawValue: "vision.pro.trianglebadge.exclamationmark.fill")

    /// 􂏰
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let walletBifold = SFSymbol(rawValue: "wallet.bifold")

    /// 􂏱
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let walletBifoldFill = SFSymbol(rawValue: "wallet.bifold.fill")

    /// 􀜍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wandAndSparkles = SFSymbol(rawValue: "wand.and.sparkles")

    /// 􀜎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wandAndSparklesInverse = SFSymbol(rawValue: "wand.and.sparkles.inverse")

    /// 􁎆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let waterWavesAndArrowTriangleheadDown = SFSymbol(rawValue: "water.waves.and.arrow.trianglehead.down")

    /// 􁜰
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let waterWavesAndArrowTriangleheadDownTrianglebadgeExclamationmark = SFSymbol(rawValue: "water.waves.and.arrow.trianglehead.down.trianglebadge.exclamationmark")

    /// 􁎅
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let waterWavesAndArrowTriangleheadUp = SFSymbol(rawValue: "water.waves.and.arrow.trianglehead.up")

    /// 􂙪
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let wave3Down = SFSymbol(rawValue: "wave.3.down")

    /// 􂨀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wave3DownCarSide = SFSymbol(rawValue: "wave.3.down.car.side")

    /// 􂨁
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let wave3DownCarSideFill = SFSymbol(rawValue: "wave.3.down.car.side.fill")

    /// 􂙫
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wave3DownCircle = SFSymbol(rawValue: "wave.3.down.circle")

    /// 􂙬
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let wave3DownCircleFill = SFSymbol(rawValue: "wave.3.down.circle.fill")

    /// 􂨆
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wave3DownConvertibleSide = SFSymbol(rawValue: "wave.3.down.convertible.side")

    /// 􂨇
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let wave3DownConvertibleSideFill = SFSymbol(rawValue: "wave.3.down.convertible.side.fill")

    /// 􂨄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wave3DownPickupSide = SFSymbol(rawValue: "wave.3.down.pickup.side")

    /// 􂨅
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let wave3DownPickupSideFill = SFSymbol(rawValue: "wave.3.down.pickup.side.fill")

    /// 􂨂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wave3DownSuvSide = SFSymbol(rawValue: "wave.3.down.suv.side")

    /// 􂨃
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let wave3DownSuvSideFill = SFSymbol(rawValue: "wave.3.down.suv.side.fill")

    /// 􂙧
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let wave3Up = SFSymbol(rawValue: "wave.3.up")

    /// 􂙨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wave3UpCircle = SFSymbol(rawValue: "wave.3.up.circle")

    /// 􂙩
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let wave3UpCircleFill = SFSymbol(rawValue: "wave.3.up.circle.fill")

    /// 􁃨
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let waveformBadgeMicrophone = SFSymbol(rawValue: "waveform.badge.microphone")

    /// 􂏥
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let wheelchair = SFSymbol(rawValue: "wheelchair")

    /// 􂈒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let widgetExtralarge = SFSymbol(rawValue: "widget.extralarge")

    /// 􂟴
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let widgetExtralargeBadgePlus = SFSymbol(rawValue: "widget.extralarge.badge.plus")

    /// 􂘮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let widgetLarge = SFSymbol(rawValue: "widget.large")

    /// 􂟲
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let widgetLargeBadgePlus = SFSymbol(rawValue: "widget.large.badge.plus")

    /// 􂘭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let widgetMedium = SFSymbol(rawValue: "widget.medium")

    /// 􂟰
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let widgetMediumBadgePlus = SFSymbol(rawValue: "widget.medium.badge.plus")

    /// 􂘬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let widgetSmall = SFSymbol(rawValue: "widget.small")

    /// 􂟮
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let widgetSmallBadgePlus = SFSymbol(rawValue: "widget.small.badge.plus")

    /// 􂈡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wonsignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "wonsign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂔙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wonsignBankBuilding = SFSymbol(rawValue: "wonsign.bank.building")

    /// 􂔚
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let wonsignBankBuildingFill = SFSymbol(rawValue: "wonsign.bank.building.fill")

    /// 􂩤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wonsignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "wonsign.gauge.chart.lefthalf.righthalf")

    /// 􂪎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wonsignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "wonsign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰴
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wonsignRing = SFSymbol(rawValue: "wonsign.ring")

    /// 􂰊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let wonsignRingDashed = SFSymbol(rawValue: "wonsign.ring.dashed")

    /// 􂮰
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let xmarkTriangleCircleSquare = SFSymbol(rawValue: "xmark.triangle.circle.square")

    /// 􂮱
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let xmarkTriangleCircleSquareFill = SFSymbol(rawValue: "xmark.triangle.circle.square.fill")

    /// 􂈔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let yensignArrowTriangleheadCounterclockwiseRotate90 = SFSymbol(rawValue: "yensign.arrow.trianglehead.counterclockwise.rotate.90")

    /// 􂓿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let yensignBankBuilding = SFSymbol(rawValue: "yensign.bank.building")

    /// 􂔀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let yensignBankBuildingFill = SFSymbol(rawValue: "yensign.bank.building.fill")

    /// 􂩣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let yensignGaugeChartLefthalfRighthalf = SFSymbol(rawValue: "yensign.gauge.chart.lefthalf.righthalf")

    /// 􂪍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let yensignGaugeChartLeftthirdTopthirdRightthird = SFSymbol(rawValue: "yensign.gauge.chart.leftthird.topthird.rightthird")

    /// 􂰳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let yensignRing = SFSymbol(rawValue: "yensign.ring")

    /// 􂰉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let yensignRingDashed = SFSymbol(rawValue: "yensign.ring.dashed")

    /// 􀤧
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let zipperPage = SFSymbol(rawValue: "zipper.page")
}
